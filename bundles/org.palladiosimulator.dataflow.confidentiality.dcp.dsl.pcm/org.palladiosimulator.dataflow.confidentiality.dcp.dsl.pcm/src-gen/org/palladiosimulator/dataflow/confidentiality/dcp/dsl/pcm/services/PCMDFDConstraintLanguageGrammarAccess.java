/*
 * generated by Xtext 2.25.0
 */
package org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.sebinside.dcp.dsl.services.DSLGrammarAccess;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class PCMDFDConstraintLanguageGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.PCMDFDConstraintLanguage.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTargetModelTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTargetModelTypeTargetModelTypeDefParserRuleCall_0_0 = (RuleCall)cTargetModelTypeAssignment_0.eContents().get(0);
		private final Assignment cElementsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cElementsAbstractElementParserRuleCall_1_0 = (RuleCall)cElementsAssignment_1.eContents().get(0);
		
		//@Override
		//Model: //necessary
		//    (targetModelType=TargetModelTypeDef)?
		//    (elements+=AbstractElement)*;
		@Override public ParserRule getRule() { return rule; }
		
		////necessary
		//   (targetModelType=TargetModelTypeDef)?
		//   (elements+=AbstractElement)*
		public Group getGroup() { return cGroup; }
		
		////necessary
		//   (targetModelType=TargetModelTypeDef)?
		public Assignment getTargetModelTypeAssignment_0() { return cTargetModelTypeAssignment_0; }
		
		//TargetModelTypeDef
		public RuleCall getTargetModelTypeTargetModelTypeDefParserRuleCall_0_0() { return cTargetModelTypeTargetModelTypeDefParserRuleCall_0_0; }
		
		//(elements+=AbstractElement)*
		public Assignment getElementsAssignment_1() { return cElementsAssignment_1; }
		
		//AbstractElement
		public RuleCall getElementsAbstractElementParserRuleCall_1_0() { return cElementsAbstractElementParserRuleCall_1_0; }
	}
	public class TargetModelTypeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.PCMDFDConstraintLanguage.TargetModelTypeDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTargetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTypePCMDFDKeyword_1_0 = (Keyword)cTypeAssignment_1.eContents().get(0);
		private final Keyword cUsingKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPcmTypeContainerAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cPcmTypeContainerCharacteristicTypeDictionaryCrossReference_3_0 = (CrossReference)cPcmTypeContainerAssignment_3.eContents().get(0);
		private final RuleCall cPcmTypeContainerCharacteristicTypeDictionaryIDTerminalRuleCall_3_0_1 = (RuleCall)cPcmTypeContainerCharacteristicTypeDictionaryCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cUsageModelAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cUsageModelUsageModelCrossReference_4_1_0 = (CrossReference)cUsageModelAssignment_4_1.eContents().get(0);
		private final RuleCall cUsageModelUsageModelIDTerminalRuleCall_4_1_0_1 = (RuleCall)cUsageModelUsageModelCrossReference_4_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cRepositoryModelAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final CrossReference cRepositoryModelRepositoryCrossReference_4_3_0 = (CrossReference)cRepositoryModelAssignment_4_3.eContents().get(0);
		private final RuleCall cRepositoryModelRepositoryIDTerminalRuleCall_4_3_0_1 = (RuleCall)cRepositoryModelRepositoryCrossReference_4_3_0.eContents().get(1);
		
		//@Override
		//TargetModelTypeDef:
		//    'target' type="PCMDFD" 'using' pcmTypeContainer=[pcmDictionary::CharacteristicTypeDictionary]
		//        (',' usageModel=[usagemodel::UsageModel] ',' repositoryModel=[repository::Repository])?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'target' type="PCMDFD" 'using' pcmTypeContainer=[pcmDictionary::CharacteristicTypeDictionary]
		//    (',' usageModel=[usagemodel::UsageModel] ',' repositoryModel=[repository::Repository])?
		public Group getGroup() { return cGroup; }
		
		//'target'
		public Keyword getTargetKeyword_0() { return cTargetKeyword_0; }
		
		//type="PCMDFD"
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//"PCMDFD"
		public Keyword getTypePCMDFDKeyword_1_0() { return cTypePCMDFDKeyword_1_0; }
		
		//'using'
		public Keyword getUsingKeyword_2() { return cUsingKeyword_2; }
		
		//pcmTypeContainer=[pcmDictionary::CharacteristicTypeDictionary]
		public Assignment getPcmTypeContainerAssignment_3() { return cPcmTypeContainerAssignment_3; }
		
		//[pcmDictionary::CharacteristicTypeDictionary]
		public CrossReference getPcmTypeContainerCharacteristicTypeDictionaryCrossReference_3_0() { return cPcmTypeContainerCharacteristicTypeDictionaryCrossReference_3_0; }
		
		//ID
		public RuleCall getPcmTypeContainerCharacteristicTypeDictionaryIDTerminalRuleCall_3_0_1() { return cPcmTypeContainerCharacteristicTypeDictionaryIDTerminalRuleCall_3_0_1; }
		
		//(',' usageModel=[usagemodel::UsageModel] ',' repositoryModel=[repository::Repository])?
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//usageModel=[usagemodel::UsageModel]
		public Assignment getUsageModelAssignment_4_1() { return cUsageModelAssignment_4_1; }
		
		//[usagemodel::UsageModel]
		public CrossReference getUsageModelUsageModelCrossReference_4_1_0() { return cUsageModelUsageModelCrossReference_4_1_0; }
		
		//ID
		public RuleCall getUsageModelUsageModelIDTerminalRuleCall_4_1_0_1() { return cUsageModelUsageModelIDTerminalRuleCall_4_1_0_1; }
		
		//','
		public Keyword getCommaKeyword_4_2() { return cCommaKeyword_4_2; }
		
		//repositoryModel=[repository::Repository]
		public Assignment getRepositoryModelAssignment_4_3() { return cRepositoryModelAssignment_4_3; }
		
		//[repository::Repository]
		public CrossReference getRepositoryModelRepositoryCrossReference_4_3_0() { return cRepositoryModelRepositoryCrossReference_4_3_0; }
		
		//ID
		public RuleCall getRepositoryModelRepositoryIDTerminalRuleCall_4_3_0_1() { return cRepositoryModelRepositoryIDTerminalRuleCall_4_3_0_1; }
	}
	public class PropertySelectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.PCMDFDConstraintLanguage.PropertySelector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComponentPropertyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRefCharacteristicTypeSelectorParserRuleCall_1_0 = (RuleCall)cRefAssignment_1.eContents().get(0);
		
		////
		////PCMTargetModelTypeDef:
		////    'target' type="PCMDFD" 'using' pcmTypeContainer=[pcmDictionary::CharacteristicTypeDictionary]
		////        ',' usageModel=[usagemodel::UsageModel] ',' repositoryModel=[repository::Repository]
		////;
		////@Override
		////DestinationSelector returns base::DestinationSelector:
		////    PropertySelector | PropertyClassSelector | ComponentIdentitySelector;
		//@Override
		//PropertySelector:
		//    'component.property.' ref=CharacteristicTypeSelector;
		@Override public ParserRule getRule() { return rule; }
		
		//'component.property.' ref=CharacteristicTypeSelector
		public Group getGroup() { return cGroup; }
		
		//'component.property.'
		public Keyword getComponentPropertyKeyword_0() { return cComponentPropertyKeyword_0; }
		
		//ref=CharacteristicTypeSelector
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }
		
		//CharacteristicTypeSelector
		public RuleCall getRefCharacteristicTypeSelectorParserRuleCall_1_0() { return cRefCharacteristicTypeSelectorParserRuleCall_1_0; }
	}
	public class PropertyClassSelectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.PCMDFDConstraintLanguage.PropertyClassSelector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComponentClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefCharacteristicClassCrossReference_1_0 = (CrossReference)cRefAssignment_1.eContents().get(0);
		private final RuleCall cRefCharacteristicClassIDTerminalRuleCall_1_0_1 = (RuleCall)cRefCharacteristicClassCrossReference_1_0.eContents().get(1);
		
		//@Override
		//PropertyClassSelector:
		//    'component.class.' ref=[base::CharacteristicClass];
		@Override public ParserRule getRule() { return rule; }
		
		//'component.class.' ref=[base::CharacteristicClass]
		public Group getGroup() { return cGroup; }
		
		//'component.class.'
		public Keyword getComponentClassKeyword_0() { return cComponentClassKeyword_0; }
		
		//ref=[base::CharacteristicClass]
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }
		
		//[base::CharacteristicClass]
		public CrossReference getRefCharacteristicClassCrossReference_1_0() { return cRefCharacteristicClassCrossReference_1_0; }
		
		//ID
		public RuleCall getRefCharacteristicClassIDTerminalRuleCall_1_0_1() { return cRefCharacteristicClassIDTerminalRuleCall_1_0_1; }
	}
	public class NodeIdentitiySelectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.PCMDFDConstraintLanguage.NodeIdentitiySelector");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cComponentNameKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cComponentIdentityKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cAlternatives_1_1.eContents().get(0);
		private final Keyword cComponentKeyword_1_1_0_0 = (Keyword)cGroup_1_1_0.eContents().get(0);
		private final Assignment cAssemblyAssignment_1_1_0_1 = (Assignment)cGroup_1_1_0.eContents().get(1);
		private final CrossReference cAssemblyAssemblyContextCrossReference_1_1_0_1_0 = (CrossReference)cAssemblyAssignment_1_1_0_1.eContents().get(0);
		private final RuleCall cAssemblyAssemblyContextIDTerminalRuleCall_1_1_0_1_0_1 = (RuleCall)cAssemblyAssemblyContextCrossReference_1_1_0_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_1_1_0_2 = (Keyword)cGroup_1_1_0.eContents().get(2);
		private final Assignment cComponentAssignment_1_1_0_3 = (Assignment)cGroup_1_1_0.eContents().get(3);
		private final CrossReference cComponentBasicComponentCrossReference_1_1_0_3_0 = (CrossReference)cComponentAssignment_1_1_0_3.eContents().get(0);
		private final RuleCall cComponentBasicComponentIDTerminalRuleCall_1_1_0_3_0_1 = (RuleCall)cComponentBasicComponentCrossReference_1_1_0_3_0.eContents().get(1);
		private final Group cGroup_1_1_1 = (Group)cAlternatives_1_1.eContents().get(1);
		private final Keyword cActionKeyword_1_1_1_0 = (Keyword)cGroup_1_1_1.eContents().get(0);
		private final Assignment cActionAssignment_1_1_1_1 = (Assignment)cGroup_1_1_1.eContents().get(1);
		private final CrossReference cActionAbstractActionCrossReference_1_1_1_1_0 = (CrossReference)cActionAssignment_1_1_1_1.eContents().get(0);
		private final RuleCall cActionAbstractActionIDTerminalRuleCall_1_1_1_1_0_1 = (RuleCall)cActionAbstractActionCrossReference_1_1_1_1_0.eContents().get(1);
		private final Group cGroup_1_1_2 = (Group)cAlternatives_1_1.eContents().get(2);
		private final Keyword cSEFFKeyword_1_1_2_0 = (Keyword)cGroup_1_1_2.eContents().get(0);
		private final Assignment cAssemblyAssignment_1_1_2_1 = (Assignment)cGroup_1_1_2.eContents().get(1);
		private final CrossReference cAssemblyAssemblyContextCrossReference_1_1_2_1_0 = (CrossReference)cAssemblyAssignment_1_1_2_1.eContents().get(0);
		private final RuleCall cAssemblyAssemblyContextIDTerminalRuleCall_1_1_2_1_0_1 = (RuleCall)cAssemblyAssemblyContextCrossReference_1_1_2_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_1_1_2_2 = (Keyword)cGroup_1_1_2.eContents().get(2);
		private final Assignment cComponentAssignment_1_1_2_3 = (Assignment)cGroup_1_1_2.eContents().get(3);
		private final CrossReference cComponentBasicComponentCrossReference_1_1_2_3_0 = (CrossReference)cComponentAssignment_1_1_2_3.eContents().get(0);
		private final RuleCall cComponentBasicComponentIDTerminalRuleCall_1_1_2_3_0_1 = (RuleCall)cComponentBasicComponentCrossReference_1_1_2_3_0.eContents().get(1);
		private final Keyword cFullStopKeyword_1_1_2_4 = (Keyword)cGroup_1_1_2.eContents().get(4);
		private final Assignment cSignatureAssignment_1_1_2_5 = (Assignment)cGroup_1_1_2.eContents().get(5);
		private final CrossReference cSignatureOperationSignatureCrossReference_1_1_2_5_0 = (CrossReference)cSignatureAssignment_1_1_2_5.eContents().get(0);
		private final RuleCall cSignatureOperationSignatureIDTerminalRuleCall_1_1_2_5_0_1 = (RuleCall)cSignatureOperationSignatureCrossReference_1_1_2_5_0.eContents().get(1);
		private final Group cGroup_1_1_3 = (Group)cAlternatives_1_1.eContents().get(3);
		private final Keyword cUserActionKeyword_1_1_3_0 = (Keyword)cGroup_1_1_3.eContents().get(0);
		private final Assignment cUserActionAssignment_1_1_3_1 = (Assignment)cGroup_1_1_3.eContents().get(1);
		private final CrossReference cUserActionEntryLevelSystemCallCrossReference_1_1_3_1_0 = (CrossReference)cUserActionAssignment_1_1_3_1.eContents().get(0);
		private final RuleCall cUserActionEntryLevelSystemCallIDTerminalRuleCall_1_1_3_1_0_1 = (RuleCall)cUserActionEntryLevelSystemCallCrossReference_1_1_3_1_0.eContents().get(1);
		private final Group cGroup_1_1_4 = (Group)cAlternatives_1_1.eContents().get(4);
		private final Keyword cStoreKeyword_1_1_4_0 = (Keyword)cGroup_1_1_4.eContents().get(0);
		private final Assignment cAssemblyAssignment_1_1_4_1 = (Assignment)cGroup_1_1_4.eContents().get(1);
		private final CrossReference cAssemblyAssemblyContextCrossReference_1_1_4_1_0 = (CrossReference)cAssemblyAssignment_1_1_4_1.eContents().get(0);
		private final RuleCall cAssemblyAssemblyContextIDTerminalRuleCall_1_1_4_1_0_1 = (RuleCall)cAssemblyAssemblyContextCrossReference_1_1_4_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_1_1_4_2 = (Keyword)cGroup_1_1_4.eContents().get(2);
		private final Assignment cStoreAssignment_1_1_4_3 = (Assignment)cGroup_1_1_4.eContents().get(3);
		private final CrossReference cStoreOperationalDataStoreComponentCrossReference_1_1_4_3_0 = (CrossReference)cStoreAssignment_1_1_4_3.eContents().get(0);
		private final RuleCall cStoreOperationalDataStoreComponentIDTerminalRuleCall_1_1_4_3_0_1 = (RuleCall)cStoreOperationalDataStoreComponentCrossReference_1_1_4_3_0.eContents().get(1);
		
		//@Override
		//NodeIdentitiySelector:
		//    'component.name.' name=STRING
		//    |
		//    'component.identity.' (
		//        'Component.' assembly=[composition::AssemblyContext] '.' component=[repository::BasicComponent] |
		//        'Action.' action=[seff::AbstractAction] |
		//        'SEFF.' assembly=[composition::AssemblyContext] '.' component=[repository::BasicComponent] '.' signature=[repository::OperationSignature] |
		//        'UserAction.' userAction=[usagemodel::EntryLevelSystemCall] |
		//        'Store.' assembly=[composition::AssemblyContext] '.' store=[pcmConfRepository::OperationalDataStoreComponent])
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'component.name.' name=STRING
		//|
		//'component.identity.' (
		//    'Component.' assembly=[composition::AssemblyContext] '.' component=[repository::BasicComponent] |
		//    'Action.' action=[seff::AbstractAction] |
		//    'SEFF.' assembly=[composition::AssemblyContext] '.' component=[repository::BasicComponent] '.' signature=[repository::OperationSignature] |
		//    'UserAction.' userAction=[usagemodel::EntryLevelSystemCall] |
		//    'Store.' assembly=[composition::AssemblyContext] '.' store=[pcmConfRepository::OperationalDataStoreComponent])
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'component.name.' name=STRING
		public Group getGroup_0() { return cGroup_0; }
		
		//'component.name.'
		public Keyword getComponentNameKeyword_0_0() { return cComponentNameKeyword_0_0; }
		
		//name=STRING
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0_1_0() { return cNameSTRINGTerminalRuleCall_0_1_0; }
		
		//'component.identity.' (
		//    'Component.' assembly=[composition::AssemblyContext] '.' component=[repository::BasicComponent] |
		//    'Action.' action=[seff::AbstractAction] |
		//    'SEFF.' assembly=[composition::AssemblyContext] '.' component=[repository::BasicComponent] '.' signature=[repository::OperationSignature] |
		//    'UserAction.' userAction=[usagemodel::EntryLevelSystemCall] |
		//    'Store.' assembly=[composition::AssemblyContext] '.' store=[pcmConfRepository::OperationalDataStoreComponent])
		public Group getGroup_1() { return cGroup_1; }
		
		//'component.identity.'
		public Keyword getComponentIdentityKeyword_1_0() { return cComponentIdentityKeyword_1_0; }
		
		//(
		//       'Component.' assembly=[composition::AssemblyContext] '.' component=[repository::BasicComponent] |
		//       'Action.' action=[seff::AbstractAction] |
		//       'SEFF.' assembly=[composition::AssemblyContext] '.' component=[repository::BasicComponent] '.' signature=[repository::OperationSignature] |
		//       'UserAction.' userAction=[usagemodel::EntryLevelSystemCall] |
		//       'Store.' assembly=[composition::AssemblyContext] '.' store=[pcmConfRepository::OperationalDataStoreComponent])
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//'Component.' assembly=[composition::AssemblyContext] '.' component=[repository::BasicComponent]
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }
		
		//'Component.'
		public Keyword getComponentKeyword_1_1_0_0() { return cComponentKeyword_1_1_0_0; }
		
		//assembly=[composition::AssemblyContext]
		public Assignment getAssemblyAssignment_1_1_0_1() { return cAssemblyAssignment_1_1_0_1; }
		
		//[composition::AssemblyContext]
		public CrossReference getAssemblyAssemblyContextCrossReference_1_1_0_1_0() { return cAssemblyAssemblyContextCrossReference_1_1_0_1_0; }
		
		//ID
		public RuleCall getAssemblyAssemblyContextIDTerminalRuleCall_1_1_0_1_0_1() { return cAssemblyAssemblyContextIDTerminalRuleCall_1_1_0_1_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_1_0_2() { return cFullStopKeyword_1_1_0_2; }
		
		//component=[repository::BasicComponent]
		public Assignment getComponentAssignment_1_1_0_3() { return cComponentAssignment_1_1_0_3; }
		
		//[repository::BasicComponent]
		public CrossReference getComponentBasicComponentCrossReference_1_1_0_3_0() { return cComponentBasicComponentCrossReference_1_1_0_3_0; }
		
		//ID
		public RuleCall getComponentBasicComponentIDTerminalRuleCall_1_1_0_3_0_1() { return cComponentBasicComponentIDTerminalRuleCall_1_1_0_3_0_1; }
		
		//'Action.' action=[seff::AbstractAction]
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }
		
		//'Action.'
		public Keyword getActionKeyword_1_1_1_0() { return cActionKeyword_1_1_1_0; }
		
		//action=[seff::AbstractAction]
		public Assignment getActionAssignment_1_1_1_1() { return cActionAssignment_1_1_1_1; }
		
		//[seff::AbstractAction]
		public CrossReference getActionAbstractActionCrossReference_1_1_1_1_0() { return cActionAbstractActionCrossReference_1_1_1_1_0; }
		
		//ID
		public RuleCall getActionAbstractActionIDTerminalRuleCall_1_1_1_1_0_1() { return cActionAbstractActionIDTerminalRuleCall_1_1_1_1_0_1; }
		
		//'SEFF.' assembly=[composition::AssemblyContext] '.' component=[repository::BasicComponent] '.' signature=[repository::OperationSignature]
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }
		
		//'SEFF.'
		public Keyword getSEFFKeyword_1_1_2_0() { return cSEFFKeyword_1_1_2_0; }
		
		//assembly=[composition::AssemblyContext]
		public Assignment getAssemblyAssignment_1_1_2_1() { return cAssemblyAssignment_1_1_2_1; }
		
		//[composition::AssemblyContext]
		public CrossReference getAssemblyAssemblyContextCrossReference_1_1_2_1_0() { return cAssemblyAssemblyContextCrossReference_1_1_2_1_0; }
		
		//ID
		public RuleCall getAssemblyAssemblyContextIDTerminalRuleCall_1_1_2_1_0_1() { return cAssemblyAssemblyContextIDTerminalRuleCall_1_1_2_1_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_1_2_2() { return cFullStopKeyword_1_1_2_2; }
		
		//component=[repository::BasicComponent]
		public Assignment getComponentAssignment_1_1_2_3() { return cComponentAssignment_1_1_2_3; }
		
		//[repository::BasicComponent]
		public CrossReference getComponentBasicComponentCrossReference_1_1_2_3_0() { return cComponentBasicComponentCrossReference_1_1_2_3_0; }
		
		//ID
		public RuleCall getComponentBasicComponentIDTerminalRuleCall_1_1_2_3_0_1() { return cComponentBasicComponentIDTerminalRuleCall_1_1_2_3_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_1_2_4() { return cFullStopKeyword_1_1_2_4; }
		
		//signature=[repository::OperationSignature]
		public Assignment getSignatureAssignment_1_1_2_5() { return cSignatureAssignment_1_1_2_5; }
		
		//[repository::OperationSignature]
		public CrossReference getSignatureOperationSignatureCrossReference_1_1_2_5_0() { return cSignatureOperationSignatureCrossReference_1_1_2_5_0; }
		
		//ID
		public RuleCall getSignatureOperationSignatureIDTerminalRuleCall_1_1_2_5_0_1() { return cSignatureOperationSignatureIDTerminalRuleCall_1_1_2_5_0_1; }
		
		//'UserAction.' userAction=[usagemodel::EntryLevelSystemCall]
		public Group getGroup_1_1_3() { return cGroup_1_1_3; }
		
		//'UserAction.'
		public Keyword getUserActionKeyword_1_1_3_0() { return cUserActionKeyword_1_1_3_0; }
		
		//userAction=[usagemodel::EntryLevelSystemCall]
		public Assignment getUserActionAssignment_1_1_3_1() { return cUserActionAssignment_1_1_3_1; }
		
		//[usagemodel::EntryLevelSystemCall]
		public CrossReference getUserActionEntryLevelSystemCallCrossReference_1_1_3_1_0() { return cUserActionEntryLevelSystemCallCrossReference_1_1_3_1_0; }
		
		//ID
		public RuleCall getUserActionEntryLevelSystemCallIDTerminalRuleCall_1_1_3_1_0_1() { return cUserActionEntryLevelSystemCallIDTerminalRuleCall_1_1_3_1_0_1; }
		
		//'Store.' assembly=[composition::AssemblyContext] '.' store=[pcmConfRepository::OperationalDataStoreComponent]
		public Group getGroup_1_1_4() { return cGroup_1_1_4; }
		
		//'Store.'
		public Keyword getStoreKeyword_1_1_4_0() { return cStoreKeyword_1_1_4_0; }
		
		//assembly=[composition::AssemblyContext]
		public Assignment getAssemblyAssignment_1_1_4_1() { return cAssemblyAssignment_1_1_4_1; }
		
		//[composition::AssemblyContext]
		public CrossReference getAssemblyAssemblyContextCrossReference_1_1_4_1_0() { return cAssemblyAssemblyContextCrossReference_1_1_4_1_0; }
		
		//ID
		public RuleCall getAssemblyAssemblyContextIDTerminalRuleCall_1_1_4_1_0_1() { return cAssemblyAssemblyContextIDTerminalRuleCall_1_1_4_1_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_1_4_2() { return cFullStopKeyword_1_1_4_2; }
		
		//store=[pcmConfRepository::OperationalDataStoreComponent]
		public Assignment getStoreAssignment_1_1_4_3() { return cStoreAssignment_1_1_4_3; }
		
		//[pcmConfRepository::OperationalDataStoreComponent]
		public CrossReference getStoreOperationalDataStoreComponentCrossReference_1_1_4_3_0() { return cStoreOperationalDataStoreComponentCrossReference_1_1_4_3_0; }
		
		//ID
		public RuleCall getStoreOperationalDataStoreComponentIDTerminalRuleCall_1_1_4_3_0_1() { return cStoreOperationalDataStoreComponentIDTerminalRuleCall_1_1_4_3_0_1; }
	}
	
	
	private final ModelElements pModel;
	private final TargetModelTypeDefElements pTargetModelTypeDef;
	private final PropertySelectorElements pPropertySelector;
	private final PropertyClassSelectorElements pPropertyClassSelector;
	private final NodeIdentitiySelectorElements pNodeIdentitiySelector;
	
	private final Grammar grammar;
	
	private final DSLGrammarAccess gaDSL;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public PCMDFDConstraintLanguageGrammarAccess(GrammarProvider grammarProvider,
			DSLGrammarAccess gaDSL,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaDSL = gaDSL;
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pTargetModelTypeDef = new TargetModelTypeDefElements();
		this.pPropertySelector = new PropertySelectorElements();
		this.pPropertyClassSelector = new PropertyClassSelectorElements();
		this.pNodeIdentitiySelector = new NodeIdentitiySelectorElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.PCMDFDConstraintLanguage".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public DSLGrammarAccess getDSLGrammarAccess() {
		return gaDSL;
	}
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//@Override
	//Model: //necessary
	//    (targetModelType=TargetModelTypeDef)?
	//    (elements+=AbstractElement)*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//@Override
	//TargetModelTypeDef:
	//    'target' type="PCMDFD" 'using' pcmTypeContainer=[pcmDictionary::CharacteristicTypeDictionary]
	//        (',' usageModel=[usagemodel::UsageModel] ',' repositoryModel=[repository::Repository])?
	//;
	public TargetModelTypeDefElements getTargetModelTypeDefAccess() {
		return pTargetModelTypeDef;
	}
	
	public ParserRule getTargetModelTypeDefRule() {
		return getTargetModelTypeDefAccess().getRule();
	}
	
	////
	////PCMTargetModelTypeDef:
	////    'target' type="PCMDFD" 'using' pcmTypeContainer=[pcmDictionary::CharacteristicTypeDictionary]
	////        ',' usageModel=[usagemodel::UsageModel] ',' repositoryModel=[repository::Repository]
	////;
	////@Override
	////DestinationSelector returns base::DestinationSelector:
	////    PropertySelector | PropertyClassSelector | ComponentIdentitySelector;
	//@Override
	//PropertySelector:
	//    'component.property.' ref=CharacteristicTypeSelector;
	public PropertySelectorElements getPropertySelectorAccess() {
		return pPropertySelector;
	}
	
	public ParserRule getPropertySelectorRule() {
		return getPropertySelectorAccess().getRule();
	}
	
	//@Override
	//PropertyClassSelector:
	//    'component.class.' ref=[base::CharacteristicClass];
	public PropertyClassSelectorElements getPropertyClassSelectorAccess() {
		return pPropertyClassSelector;
	}
	
	public ParserRule getPropertyClassSelectorRule() {
		return getPropertyClassSelectorAccess().getRule();
	}
	
	//@Override
	//NodeIdentitiySelector:
	//    'component.name.' name=STRING
	//    |
	//    'component.identity.' (
	//        'Component.' assembly=[composition::AssemblyContext] '.' component=[repository::BasicComponent] |
	//        'Action.' action=[seff::AbstractAction] |
	//        'SEFF.' assembly=[composition::AssemblyContext] '.' component=[repository::BasicComponent] '.' signature=[repository::OperationSignature] |
	//        'UserAction.' userAction=[usagemodel::EntryLevelSystemCall] |
	//        'Store.' assembly=[composition::AssemblyContext] '.' store=[pcmConfRepository::OperationalDataStoreComponent])
	//    ;
	public NodeIdentitiySelectorElements getNodeIdentitiySelectorAccess() {
		return pNodeIdentitiySelector;
	}
	
	public ParserRule getNodeIdentitiySelectorRule() {
		return getNodeIdentitiySelectorAccess().getRule();
	}
	
	//AbstractElement:
	//    Include | CharacteristicType | CharacteristicClass | Constraint | {AbstractElement} SL_COMMENT;
	public DSLGrammarAccess.AbstractElementElements getAbstractElementAccess() {
		return gaDSL.getAbstractElementAccess();
	}
	
	public ParserRule getAbstractElementRule() {
		return getAbstractElementAccess().getRule();
	}
	
	//CharacteristicType:
	//    'type' name=ID ':' ref=[dictionary::EnumCharacteristicType];
	public DSLGrammarAccess.CharacteristicTypeElements getCharacteristicTypeAccess() {
		return gaDSL.getCharacteristicTypeAccess();
	}
	
	public ParserRule getCharacteristicTypeRule() {
		return getCharacteristicTypeAccess().getRule();
	}
	
	//CharacteristicClass:
	//    'class' name=ID '{' members+=CharacteristicTypeSelector (',' members+=CharacteristicTypeSelector)* '}';
	public DSLGrammarAccess.CharacteristicClassElements getCharacteristicClassAccess() {
		return gaDSL.getCharacteristicClassAccess();
	}
	
	public ParserRule getCharacteristicClassRule() {
		return getCharacteristicClassAccess().getRule();
	}
	
	//CharacteristicTypeSelector:
	//    ref=[CharacteristicType] '.'
	//    // Single literal, may be negated
	//    (((negated?='!')? literals+=[dictionary::Literal]) |
	//    // Multiple literals, written as list
	//    ('[' literals+=[dictionary::Literal]
	//    (',' literals+=[dictionary::Literal])*
	//    ']') |
	//    // Variable usage
	//    (isVariableSelector?="$") variable=CharacteristicVariableType);
	public DSLGrammarAccess.CharacteristicTypeSelectorElements getCharacteristicTypeSelectorAccess() {
		return gaDSL.getCharacteristicTypeSelectorAccess();
	}
	
	public ParserRule getCharacteristicTypeSelectorRule() {
		return getCharacteristicTypeSelectorAccess().getRule();
	}
	
	//CharacteristicVariableType:
	//    CharacteristicVariable | CharacteristicSet;
	public DSLGrammarAccess.CharacteristicVariableTypeElements getCharacteristicVariableTypeAccess() {
		return gaDSL.getCharacteristicVariableTypeAccess();
	}
	
	public ParserRule getCharacteristicVariableTypeRule() {
		return getCharacteristicVariableTypeAccess().getRule();
	}
	
	//CharacteristicVariable:
	//    name=ID;
	public DSLGrammarAccess.CharacteristicVariableElements getCharacteristicVariableAccess() {
		return gaDSL.getCharacteristicVariableAccess();
	}
	
	public ParserRule getCharacteristicVariableRule() {
		return getCharacteristicVariableAccess().getRule();
	}
	
	//CharacteristicSet:
	//    name=ID "{}";
	public DSLGrammarAccess.CharacteristicSetElements getCharacteristicSetAccess() {
		return gaDSL.getCharacteristicSetAccess();
	}
	
	public ParserRule getCharacteristicSetRule() {
		return getCharacteristicSetAccess().getRule();
	}
	
	//Include:
	//    'import' importURI=STRING;
	public DSLGrammarAccess.IncludeElements getIncludeAccess() {
		return gaDSL.getIncludeAccess();
	}
	
	public ParserRule getIncludeRule() {
		return getIncludeAccess().getRule();
	}
	
	//Constraint:
	//    'constraint' name=ID '{' rule=Rule '}';
	public DSLGrammarAccess.ConstraintElements getConstraintAccess() {
		return gaDSL.getConstraintAccess();
	}
	
	public ParserRule getConstraintRule() {
		return getConstraintAccess().getRule();
	}
	
	//Rule:
	//    dataSelectors+=DataSelector ('&' dataSelectors+=DataSelector)*
	//    statement=Statement
	//    destinationSelectors+=DestinationSelector ('&' destinationSelectors+=DestinationSelector)*
	//    (condition=Condition)?;
	public DSLGrammarAccess.RuleElements getRuleAccess() {
		return gaDSL.getRuleAccess();
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}
	
	//DataSelector:
	//    AttributeSelector | AttributeClassSelector;
	public DSLGrammarAccess.DataSelectorElements getDataSelectorAccess() {
		return gaDSL.getDataSelectorAccess();
	}
	
	public ParserRule getDataSelectorRule() {
		return getDataSelectorAccess().getRule();
	}
	
	//CharacteristicSelector:
	//    AttributeSelector | PropertySelector;
	public DSLGrammarAccess.CharacteristicSelectorElements getCharacteristicSelectorAccess() {
		return gaDSL.getCharacteristicSelectorAccess();
	}
	
	public ParserRule getCharacteristicSelectorRule() {
		return getCharacteristicSelectorAccess().getRule();
	}
	
	//CharacteristicClassSelector:
	//    AttributeClassSelector | PropertyClassSelector;
	public DSLGrammarAccess.CharacteristicClassSelectorElements getCharacteristicClassSelectorAccess() {
		return gaDSL.getCharacteristicClassSelectorAccess();
	}
	
	public ParserRule getCharacteristicClassSelectorRule() {
		return getCharacteristicClassSelectorAccess().getRule();
	}
	
	//AttributeSelector:
	//    'data.attribute.' ref=CharacteristicTypeSelector;
	public DSLGrammarAccess.AttributeSelectorElements getAttributeSelectorAccess() {
		return gaDSL.getAttributeSelectorAccess();
	}
	
	public ParserRule getAttributeSelectorRule() {
		return getAttributeSelectorAccess().getRule();
	}
	
	//AttributeClassSelector:
	//    'data.class.' ref=[CharacteristicClass];
	public DSLGrammarAccess.AttributeClassSelectorElements getAttributeClassSelectorAccess() {
		return gaDSL.getAttributeClassSelectorAccess();
	}
	
	public ParserRule getAttributeClassSelectorRule() {
		return getAttributeClassSelectorAccess().getRule();
	}
	
	//DestinationSelector:
	//    PropertySelector | PropertyClassSelector | NodeIdentitiySelector;
	public DSLGrammarAccess.DestinationSelectorElements getDestinationSelectorAccess() {
		return gaDSL.getDestinationSelectorAccess();
	}
	
	public ParserRule getDestinationSelectorRule() {
		return getDestinationSelectorAccess().getRule();
	}
	
	//Statement:
	//    modality=StatementModality type=StatementType;
	public DSLGrammarAccess.StatementElements getStatementAccess() {
		return gaDSL.getStatementAccess();
	}
	
	public ParserRule getStatementRule() {
		return getStatementAccess().getRule();
	}
	
	//StatementType:
	//    name='FLOWS';
	public DSLGrammarAccess.StatementTypeElements getStatementTypeAccess() {
		return gaDSL.getStatementTypeAccess();
	}
	
	public ParserRule getStatementTypeRule() {
		return getStatementTypeAccess().getRule();
	}
	
	//StatementModality:
	//    name='NEVER';
	public DSLGrammarAccess.StatementModalityElements getStatementModalityAccess() {
		return gaDSL.getStatementModalityAccess();
	}
	
	public ParserRule getStatementModalityRule() {
		return getStatementModalityAccess().getRule();
	}
	
	//Condition:
	//    'WHERE' operation=BooleanOperation;
	public DSLGrammarAccess.ConditionElements getConditionAccess() {
		return gaDSL.getConditionAccess();
	}
	
	public ParserRule getConditionRule() {
		return getConditionAccess().getRule();
	}
	
	//Reference:
	//    CharacteristicReference | CharacteristicSetReference;
	public DSLGrammarAccess.ReferenceElements getReferenceAccess() {
		return gaDSL.getReferenceAccess();
	}
	
	public ParserRule getReferenceRule() {
		return getReferenceAccess().getRule();
	}
	
	//CharacteristicReference:
	//    value=[CharacteristicVariable];
	public DSLGrammarAccess.CharacteristicReferenceElements getCharacteristicReferenceAccess() {
		return gaDSL.getCharacteristicReferenceAccess();
	}
	
	public ParserRule getCharacteristicReferenceRule() {
		return getCharacteristicReferenceAccess().getRule();
	}
	
	//CharacteristicSetReference:
	//    value=[CharacteristicSet] | ref=CharacteristsicSetOperation;
	public DSLGrammarAccess.CharacteristicSetReferenceElements getCharacteristicSetReferenceAccess() {
		return gaDSL.getCharacteristicSetReferenceAccess();
	}
	
	public ParserRule getCharacteristicSetReferenceRule() {
		return getCharacteristicSetReferenceAccess().getRule();
	}
	
	//Operation:
	//    BooleanOperation | CharacteristsicSetOperation;
	public DSLGrammarAccess.OperationElements getOperationAccess() {
		return gaDSL.getOperationAccess();
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}
	
	//BooleanOperation:
	//    LogicalOrOperation;
	public DSLGrammarAccess.BooleanOperationElements getBooleanOperationAccess() {
		return gaDSL.getBooleanOperationAccess();
	}
	
	public ParserRule getBooleanOperationRule() {
		return getBooleanOperationAccess().getRule();
	}
	
	//CharacteristsicSetOperation:
	//    CreateSetOperation | IntersectionOperation | UnionOperation | SubtractOperation;
	public DSLGrammarAccess.CharacteristsicSetOperationElements getCharacteristsicSetOperationAccess() {
		return gaDSL.getCharacteristsicSetOperationAccess();
	}
	
	public ParserRule getCharacteristsicSetOperationRule() {
		return getCharacteristsicSetOperationAccess().getRule();
	}
	
	//LogicalOrOperation returns BooleanOperation:
	//    LogicalAndOperation ({LogicalOrOperation.left=current} "|" right=LogicalAndOperation)*;
	public DSLGrammarAccess.LogicalOrOperationElements getLogicalOrOperationAccess() {
		return gaDSL.getLogicalOrOperationAccess();
	}
	
	public ParserRule getLogicalOrOperationRule() {
		return getLogicalOrOperationAccess().getRule();
	}
	
	//LogicalAndOperation returns BooleanOperation:
	//    LogicalNegationOperation ({LogicalAndOperation.left=current} "&" right=LogicalNegationOperation)*;
	public DSLGrammarAccess.LogicalAndOperationElements getLogicalAndOperationAccess() {
		return gaDSL.getLogicalAndOperationAccess();
	}
	
	public ParserRule getLogicalAndOperationRule() {
		return getLogicalAndOperationAccess().getRule();
	}
	
	//LogicalNegationOperation returns BooleanOperation:
	//    EncapsulatedLogicalOperation | {LogicalNegationOperation} "!" value=EncapsulatedLogicalOperation;
	public DSLGrammarAccess.LogicalNegationOperationElements getLogicalNegationOperationAccess() {
		return gaDSL.getLogicalNegationOperationAccess();
	}
	
	public ParserRule getLogicalNegationOperationRule() {
		return getLogicalNegationOperationAccess().getRule();
	}
	
	//EncapsulatedLogicalOperation returns BooleanOperation:
	//    SimpleBooleanOperation |
	//    '(' LogicalOrOperation ')';
	public DSLGrammarAccess.EncapsulatedLogicalOperationElements getEncapsulatedLogicalOperationAccess() {
		return gaDSL.getEncapsulatedLogicalOperationAccess();
	}
	
	public ParserRule getEncapsulatedLogicalOperationRule() {
		return getEncapsulatedLogicalOperationAccess().getRule();
	}
	
	//SimpleBooleanOperation:
	//    EmptySetOperation | VariableEqualityOperation | VariableInequalityOperation | ElementOfOperation;
	public DSLGrammarAccess.SimpleBooleanOperationElements getSimpleBooleanOperationAccess() {
		return gaDSL.getSimpleBooleanOperationAccess();
	}
	
	public ParserRule getSimpleBooleanOperationRule() {
		return getSimpleBooleanOperationAccess().getRule();
	}
	
	//VariableEqualityOperation:
	//    left=CharacteristicReference "==" right=CharacteristicReference;
	public DSLGrammarAccess.VariableEqualityOperationElements getVariableEqualityOperationAccess() {
		return gaDSL.getVariableEqualityOperationAccess();
	}
	
	public ParserRule getVariableEqualityOperationRule() {
		return getVariableEqualityOperationAccess().getRule();
	}
	
	//VariableInequalityOperation:
	//    left=CharacteristicReference "!=" right=CharacteristicReference;
	public DSLGrammarAccess.VariableInequalityOperationElements getVariableInequalityOperationAccess() {
		return gaDSL.getVariableInequalityOperationAccess();
	}
	
	public ParserRule getVariableInequalityOperationRule() {
		return getVariableInequalityOperationAccess().getRule();
	}
	
	//EmptySetOperation:
	//    "isEmpty" "(" value=CharacteristicSetReference ")";
	public DSLGrammarAccess.EmptySetOperationElements getEmptySetOperationAccess() {
		return gaDSL.getEmptySetOperationAccess();
	}
	
	public ParserRule getEmptySetOperationRule() {
		return getEmptySetOperationAccess().getRule();
	}
	
	//IntersectionOperation:
	//    "intersection" "(" left=CharacteristicSetReference "," right=CharacteristicSetReference ")";
	public DSLGrammarAccess.IntersectionOperationElements getIntersectionOperationAccess() {
		return gaDSL.getIntersectionOperationAccess();
	}
	
	public ParserRule getIntersectionOperationRule() {
		return getIntersectionOperationAccess().getRule();
	}
	
	//UnionOperation:
	//    "union" "(" left=CharacteristicSetReference "," right=CharacteristicSetReference ")";
	public DSLGrammarAccess.UnionOperationElements getUnionOperationAccess() {
		return gaDSL.getUnionOperationAccess();
	}
	
	public ParserRule getUnionOperationRule() {
		return getUnionOperationAccess().getRule();
	}
	
	//SubtractOperation:
	//    "subtract" "(" left=CharacteristicSetReference "," right=CharacteristicSetReference ")";
	public DSLGrammarAccess.SubtractOperationElements getSubtractOperationAccess() {
		return gaDSL.getSubtractOperationAccess();
	}
	
	public ParserRule getSubtractOperationRule() {
		return getSubtractOperationAccess().getRule();
	}
	
	//ElementOfOperation:
	//    "elementOf" "(" left=CharacteristicReference "," right=CharacteristicSetReference ")";
	public DSLGrammarAccess.ElementOfOperationElements getElementOfOperationAccess() {
		return gaDSL.getElementOfOperationAccess();
	}
	
	public ParserRule getElementOfOperationRule() {
		return getElementOfOperationAccess().getRule();
	}
	
	//CreateSetOperation:
	//    "{" value=CharacteristicReference "}";
	public DSLGrammarAccess.CreateSetOperationElements getCreateSetOperationAccess() {
		return gaDSL.getCreateSetOperationAccess();
	}
	
	public ParserRule getCreateSetOperationRule() {
		return getCreateSetOperationAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
