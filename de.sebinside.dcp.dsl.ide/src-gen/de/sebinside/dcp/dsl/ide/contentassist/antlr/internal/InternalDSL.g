/*
 * generated by Xtext 2.24.0
 */
grammar InternalDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.sebinside.dcp.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.sebinside.dcp.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.sebinside.dcp.dsl.services.DSLGrammarAccess;

}
@parser::members {
	private DSLGrammarAccess grammarAccess;

	public void setGrammarAccess(DSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTargetModelTypeDef
entryRuleTargetModelTypeDef
:
{ before(grammarAccess.getTargetModelTypeDefRule()); }
	 ruleTargetModelTypeDef
{ after(grammarAccess.getTargetModelTypeDefRule()); } 
	 EOF 
;

// Rule TargetModelTypeDef
ruleTargetModelTypeDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTargetModelTypeDefAccess().getGroup()); }
		(rule__TargetModelTypeDef__Group__0)
		{ after(grammarAccess.getTargetModelTypeDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
		(rule__AbstractElement__Alternatives)
		{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristicType
entryRuleCharacteristicType
:
{ before(grammarAccess.getCharacteristicTypeRule()); }
	 ruleCharacteristicType
{ after(grammarAccess.getCharacteristicTypeRule()); } 
	 EOF 
;

// Rule CharacteristicType
ruleCharacteristicType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicTypeAccess().getGroup()); }
		(rule__CharacteristicType__Group__0)
		{ after(grammarAccess.getCharacteristicTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristicClass
entryRuleCharacteristicClass
:
{ before(grammarAccess.getCharacteristicClassRule()); }
	 ruleCharacteristicClass
{ after(grammarAccess.getCharacteristicClassRule()); } 
	 EOF 
;

// Rule CharacteristicClass
ruleCharacteristicClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicClassAccess().getGroup()); }
		(rule__CharacteristicClass__Group__0)
		{ after(grammarAccess.getCharacteristicClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristicTypeSelector
entryRuleCharacteristicTypeSelector
:
{ before(grammarAccess.getCharacteristicTypeSelectorRule()); }
	 ruleCharacteristicTypeSelector
{ after(grammarAccess.getCharacteristicTypeSelectorRule()); } 
	 EOF 
;

// Rule CharacteristicTypeSelector
ruleCharacteristicTypeSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getGroup()); }
		(rule__CharacteristicTypeSelector__Group__0)
		{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristicVariableType
entryRuleCharacteristicVariableType
:
{ before(grammarAccess.getCharacteristicVariableTypeRule()); }
	 ruleCharacteristicVariableType
{ after(grammarAccess.getCharacteristicVariableTypeRule()); } 
	 EOF 
;

// Rule CharacteristicVariableType
ruleCharacteristicVariableType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicVariableTypeAccess().getAlternatives()); }
		(rule__CharacteristicVariableType__Alternatives)
		{ after(grammarAccess.getCharacteristicVariableTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristicVariable
entryRuleCharacteristicVariable
:
{ before(grammarAccess.getCharacteristicVariableRule()); }
	 ruleCharacteristicVariable
{ after(grammarAccess.getCharacteristicVariableRule()); } 
	 EOF 
;

// Rule CharacteristicVariable
ruleCharacteristicVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicVariableAccess().getNameAssignment()); }
		(rule__CharacteristicVariable__NameAssignment)
		{ after(grammarAccess.getCharacteristicVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristicSet
entryRuleCharacteristicSet
:
{ before(grammarAccess.getCharacteristicSetRule()); }
	 ruleCharacteristicSet
{ after(grammarAccess.getCharacteristicSetRule()); } 
	 EOF 
;

// Rule CharacteristicSet
ruleCharacteristicSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicSetAccess().getGroup()); }
		(rule__CharacteristicSet__Group__0)
		{ after(grammarAccess.getCharacteristicSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInclude
entryRuleInclude
:
{ before(grammarAccess.getIncludeRule()); }
	 ruleInclude
{ after(grammarAccess.getIncludeRule()); } 
	 EOF 
;

// Rule Include
ruleInclude 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIncludeAccess().getGroup()); }
		(rule__Include__Group__0)
		{ after(grammarAccess.getIncludeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraint
entryRuleConstraint
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintAccess().getGroup()); }
		(rule__Constraint__Group__0)
		{ after(grammarAccess.getConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataSelector
entryRuleDataSelector
:
{ before(grammarAccess.getDataSelectorRule()); }
	 ruleDataSelector
{ after(grammarAccess.getDataSelectorRule()); } 
	 EOF 
;

// Rule DataSelector
ruleDataSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataSelectorAccess().getAlternatives()); }
		(rule__DataSelector__Alternatives)
		{ after(grammarAccess.getDataSelectorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeSelector
entryRuleAttributeSelector
:
{ before(grammarAccess.getAttributeSelectorRule()); }
	 ruleAttributeSelector
{ after(grammarAccess.getAttributeSelectorRule()); } 
	 EOF 
;

// Rule AttributeSelector
ruleAttributeSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeSelectorAccess().getGroup()); }
		(rule__AttributeSelector__Group__0)
		{ after(grammarAccess.getAttributeSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeClassSelector
entryRuleAttributeClassSelector
:
{ before(grammarAccess.getAttributeClassSelectorRule()); }
	 ruleAttributeClassSelector
{ after(grammarAccess.getAttributeClassSelectorRule()); } 
	 EOF 
;

// Rule AttributeClassSelector
ruleAttributeClassSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeClassSelectorAccess().getGroup()); }
		(rule__AttributeClassSelector__Group__0)
		{ after(grammarAccess.getAttributeClassSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDestinationSelector
entryRuleDestinationSelector
:
{ before(grammarAccess.getDestinationSelectorRule()); }
	 ruleDestinationSelector
{ after(grammarAccess.getDestinationSelectorRule()); } 
	 EOF 
;

// Rule DestinationSelector
ruleDestinationSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDestinationSelectorAccess().getAlternatives()); }
		(rule__DestinationSelector__Alternatives)
		{ after(grammarAccess.getDestinationSelectorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertySelector
entryRulePropertySelector
:
{ before(grammarAccess.getPropertySelectorRule()); }
	 rulePropertySelector
{ after(grammarAccess.getPropertySelectorRule()); } 
	 EOF 
;

// Rule PropertySelector
rulePropertySelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertySelectorAccess().getGroup()); }
		(rule__PropertySelector__Group__0)
		{ after(grammarAccess.getPropertySelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyClassSelector
entryRulePropertyClassSelector
:
{ before(grammarAccess.getPropertyClassSelectorRule()); }
	 rulePropertyClassSelector
{ after(grammarAccess.getPropertyClassSelectorRule()); } 
	 EOF 
;

// Rule PropertyClassSelector
rulePropertyClassSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyClassSelectorAccess().getGroup()); }
		(rule__PropertyClassSelector__Group__0)
		{ after(grammarAccess.getPropertyClassSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeIdentitiySelector
entryRuleNodeIdentitiySelector
:
{ before(grammarAccess.getNodeIdentitiySelectorRule()); }
	 ruleNodeIdentitiySelector
{ after(grammarAccess.getNodeIdentitiySelectorRule()); } 
	 EOF 
;

// Rule NodeIdentitiySelector
ruleNodeIdentitiySelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeIdentitiySelectorAccess().getAlternatives()); }
		(rule__NodeIdentitiySelector__Alternatives)
		{ after(grammarAccess.getNodeIdentitiySelectorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementType
entryRuleStatementType
:
{ before(grammarAccess.getStatementTypeRule()); }
	 ruleStatementType
{ after(grammarAccess.getStatementTypeRule()); } 
	 EOF 
;

// Rule StatementType
ruleStatementType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementTypeAccess().getNameAssignment()); }
		(rule__StatementType__NameAssignment)
		{ after(grammarAccess.getStatementTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementModality
entryRuleStatementModality
:
{ before(grammarAccess.getStatementModalityRule()); }
	 ruleStatementModality
{ after(grammarAccess.getStatementModalityRule()); } 
	 EOF 
;

// Rule StatementModality
ruleStatementModality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementModalityAccess().getNameAssignment()); }
		(rule__StatementModality__NameAssignment)
		{ after(grammarAccess.getStatementModalityAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristicReference
entryRuleCharacteristicReference
:
{ before(grammarAccess.getCharacteristicReferenceRule()); }
	 ruleCharacteristicReference
{ after(grammarAccess.getCharacteristicReferenceRule()); } 
	 EOF 
;

// Rule CharacteristicReference
ruleCharacteristicReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicReferenceAccess().getValueAssignment()); }
		(rule__CharacteristicReference__ValueAssignment)
		{ after(grammarAccess.getCharacteristicReferenceAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristicSetReference
entryRuleCharacteristicSetReference
:
{ before(grammarAccess.getCharacteristicSetReferenceRule()); }
	 ruleCharacteristicSetReference
{ after(grammarAccess.getCharacteristicSetReferenceRule()); } 
	 EOF 
;

// Rule CharacteristicSetReference
ruleCharacteristicSetReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicSetReferenceAccess().getAlternatives()); }
		(rule__CharacteristicSetReference__Alternatives)
		{ after(grammarAccess.getCharacteristicSetReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanOperation
entryRuleBooleanOperation
:
{ before(grammarAccess.getBooleanOperationRule()); }
	 ruleBooleanOperation
{ after(grammarAccess.getBooleanOperationRule()); } 
	 EOF 
;

// Rule BooleanOperation
ruleBooleanOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanOperationAccess().getLogicalOrOperationParserRuleCall()); }
		ruleLogicalOrOperation
		{ after(grammarAccess.getBooleanOperationAccess().getLogicalOrOperationParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristsicSetOperation
entryRuleCharacteristsicSetOperation
:
{ before(grammarAccess.getCharacteristsicSetOperationRule()); }
	 ruleCharacteristsicSetOperation
{ after(grammarAccess.getCharacteristsicSetOperationRule()); } 
	 EOF 
;

// Rule CharacteristsicSetOperation
ruleCharacteristsicSetOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristsicSetOperationAccess().getAlternatives()); }
		(rule__CharacteristsicSetOperation__Alternatives)
		{ after(grammarAccess.getCharacteristsicSetOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalOrOperation
entryRuleLogicalOrOperation
:
{ before(grammarAccess.getLogicalOrOperationRule()); }
	 ruleLogicalOrOperation
{ after(grammarAccess.getLogicalOrOperationRule()); } 
	 EOF 
;

// Rule LogicalOrOperation
ruleLogicalOrOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalOrOperationAccess().getGroup()); }
		(rule__LogicalOrOperation__Group__0)
		{ after(grammarAccess.getLogicalOrOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalAndOperation
entryRuleLogicalAndOperation
:
{ before(grammarAccess.getLogicalAndOperationRule()); }
	 ruleLogicalAndOperation
{ after(grammarAccess.getLogicalAndOperationRule()); } 
	 EOF 
;

// Rule LogicalAndOperation
ruleLogicalAndOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalAndOperationAccess().getGroup()); }
		(rule__LogicalAndOperation__Group__0)
		{ after(grammarAccess.getLogicalAndOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalNegationOperation
entryRuleLogicalNegationOperation
:
{ before(grammarAccess.getLogicalNegationOperationRule()); }
	 ruleLogicalNegationOperation
{ after(grammarAccess.getLogicalNegationOperationRule()); } 
	 EOF 
;

// Rule LogicalNegationOperation
ruleLogicalNegationOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalNegationOperationAccess().getAlternatives()); }
		(rule__LogicalNegationOperation__Alternatives)
		{ after(grammarAccess.getLogicalNegationOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEncapsulatedLogicalOperation
entryRuleEncapsulatedLogicalOperation
:
{ before(grammarAccess.getEncapsulatedLogicalOperationRule()); }
	 ruleEncapsulatedLogicalOperation
{ after(grammarAccess.getEncapsulatedLogicalOperationRule()); } 
	 EOF 
;

// Rule EncapsulatedLogicalOperation
ruleEncapsulatedLogicalOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEncapsulatedLogicalOperationAccess().getAlternatives()); }
		(rule__EncapsulatedLogicalOperation__Alternatives)
		{ after(grammarAccess.getEncapsulatedLogicalOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleBooleanOperation
entryRuleSimpleBooleanOperation
:
{ before(grammarAccess.getSimpleBooleanOperationRule()); }
	 ruleSimpleBooleanOperation
{ after(grammarAccess.getSimpleBooleanOperationRule()); } 
	 EOF 
;

// Rule SimpleBooleanOperation
ruleSimpleBooleanOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleBooleanOperationAccess().getAlternatives()); }
		(rule__SimpleBooleanOperation__Alternatives)
		{ after(grammarAccess.getSimpleBooleanOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableEqualityOperation
entryRuleVariableEqualityOperation
:
{ before(grammarAccess.getVariableEqualityOperationRule()); }
	 ruleVariableEqualityOperation
{ after(grammarAccess.getVariableEqualityOperationRule()); } 
	 EOF 
;

// Rule VariableEqualityOperation
ruleVariableEqualityOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableEqualityOperationAccess().getGroup()); }
		(rule__VariableEqualityOperation__Group__0)
		{ after(grammarAccess.getVariableEqualityOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableInequalityOperation
entryRuleVariableInequalityOperation
:
{ before(grammarAccess.getVariableInequalityOperationRule()); }
	 ruleVariableInequalityOperation
{ after(grammarAccess.getVariableInequalityOperationRule()); } 
	 EOF 
;

// Rule VariableInequalityOperation
ruleVariableInequalityOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableInequalityOperationAccess().getGroup()); }
		(rule__VariableInequalityOperation__Group__0)
		{ after(grammarAccess.getVariableInequalityOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptySetOperation
entryRuleEmptySetOperation
:
{ before(grammarAccess.getEmptySetOperationRule()); }
	 ruleEmptySetOperation
{ after(grammarAccess.getEmptySetOperationRule()); } 
	 EOF 
;

// Rule EmptySetOperation
ruleEmptySetOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptySetOperationAccess().getGroup()); }
		(rule__EmptySetOperation__Group__0)
		{ after(grammarAccess.getEmptySetOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntersectionOperation
entryRuleIntersectionOperation
:
{ before(grammarAccess.getIntersectionOperationRule()); }
	 ruleIntersectionOperation
{ after(grammarAccess.getIntersectionOperationRule()); } 
	 EOF 
;

// Rule IntersectionOperation
ruleIntersectionOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntersectionOperationAccess().getGroup()); }
		(rule__IntersectionOperation__Group__0)
		{ after(grammarAccess.getIntersectionOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnionOperation
entryRuleUnionOperation
:
{ before(grammarAccess.getUnionOperationRule()); }
	 ruleUnionOperation
{ after(grammarAccess.getUnionOperationRule()); } 
	 EOF 
;

// Rule UnionOperation
ruleUnionOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnionOperationAccess().getGroup()); }
		(rule__UnionOperation__Group__0)
		{ after(grammarAccess.getUnionOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubtractOperation
entryRuleSubtractOperation
:
{ before(grammarAccess.getSubtractOperationRule()); }
	 ruleSubtractOperation
{ after(grammarAccess.getSubtractOperationRule()); } 
	 EOF 
;

// Rule SubtractOperation
ruleSubtractOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubtractOperationAccess().getGroup()); }
		(rule__SubtractOperation__Group__0)
		{ after(grammarAccess.getSubtractOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementOfOperation
entryRuleElementOfOperation
:
{ before(grammarAccess.getElementOfOperationRule()); }
	 ruleElementOfOperation
{ after(grammarAccess.getElementOfOperationRule()); } 
	 EOF 
;

// Rule ElementOfOperation
ruleElementOfOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementOfOperationAccess().getGroup()); }
		(rule__ElementOfOperation__Group__0)
		{ after(grammarAccess.getElementOfOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateSetOperation
entryRuleCreateSetOperation
:
{ before(grammarAccess.getCreateSetOperationRule()); }
	 ruleCreateSetOperation
{ after(grammarAccess.getCreateSetOperationRule()); } 
	 EOF 
;

// Rule CreateSetOperation
ruleCreateSetOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateSetOperationAccess().getGroup()); }
		(rule__CreateSetOperation__Group__0)
		{ after(grammarAccess.getCreateSetOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TargetModelType
ruleTargetModelType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetModelTypeAccess().getAlternatives()); }
		(rule__TargetModelType__Alternatives)
		{ after(grammarAccess.getTargetModelTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractElementAccess().getIncludeParserRuleCall_0()); }
		ruleInclude
		{ after(grammarAccess.getAbstractElementAccess().getIncludeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getCharacteristicTypeParserRuleCall_1()); }
		ruleCharacteristicType
		{ after(grammarAccess.getAbstractElementAccess().getCharacteristicTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getCharacteristicClassParserRuleCall_2()); }
		ruleCharacteristicClass
		{ after(grammarAccess.getAbstractElementAccess().getCharacteristicClassParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getConstraintParserRuleCall_3()); }
		ruleConstraint
		{ after(grammarAccess.getAbstractElementAccess().getConstraintParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getGroup_4()); }
		(rule__AbstractElement__Group_4__0)
		{ after(grammarAccess.getAbstractElementAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getGroup_2_0()); }
		(rule__CharacteristicTypeSelector__Group_2_0__0)
		{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getGroup_2_1()); }
		(rule__CharacteristicTypeSelector__Group_2_1__0)
		{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getGroup_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getGroup_2_2()); }
		(rule__CharacteristicTypeSelector__Group_2_2__0)
		{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getGroup_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicVariableType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicVariableTypeAccess().getCharacteristicVariableParserRuleCall_0()); }
		ruleCharacteristicVariable
		{ after(grammarAccess.getCharacteristicVariableTypeAccess().getCharacteristicVariableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCharacteristicVariableTypeAccess().getCharacteristicSetParserRuleCall_1()); }
		ruleCharacteristicSet
		{ after(grammarAccess.getCharacteristicVariableTypeAccess().getCharacteristicSetParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSelector__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSelectorAccess().getAttributeSelectorParserRuleCall_0()); }
		ruleAttributeSelector
		{ after(grammarAccess.getDataSelectorAccess().getAttributeSelectorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataSelectorAccess().getAttributeClassSelectorParserRuleCall_1()); }
		ruleAttributeClassSelector
		{ after(grammarAccess.getDataSelectorAccess().getAttributeClassSelectorParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestinationSelector__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestinationSelectorAccess().getPropertySelectorParserRuleCall_0()); }
		rulePropertySelector
		{ after(grammarAccess.getDestinationSelectorAccess().getPropertySelectorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDestinationSelectorAccess().getPropertyClassSelectorParserRuleCall_1()); }
		rulePropertyClassSelector
		{ after(grammarAccess.getDestinationSelectorAccess().getPropertyClassSelectorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDestinationSelectorAccess().getNodeIdentitiySelectorParserRuleCall_2()); }
		ruleNodeIdentitiySelector
		{ after(grammarAccess.getDestinationSelectorAccess().getNodeIdentitiySelectorParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeIdentitiySelectorAccess().getGroup_0()); }
		(rule__NodeIdentitiySelector__Group_0__0)
		{ after(grammarAccess.getNodeIdentitiySelectorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeIdentitiySelectorAccess().getGroup_1()); }
		(rule__NodeIdentitiySelector__Group_1__0)
		{ after(grammarAccess.getNodeIdentitiySelectorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeIdentitiySelectorAccess().getGroup_1_1_0()); }
		(rule__NodeIdentitiySelector__Group_1_1_0__0)
		{ after(grammarAccess.getNodeIdentitiySelectorAccess().getGroup_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeIdentitiySelectorAccess().getDiaNodeAssignment_1_1_1()); }
		(rule__NodeIdentitiySelector__DiaNodeAssignment_1_1_1)
		{ after(grammarAccess.getNodeIdentitiySelectorAccess().getDiaNodeAssignment_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicSetReference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicSetReferenceAccess().getValueAssignment_0()); }
		(rule__CharacteristicSetReference__ValueAssignment_0)
		{ after(grammarAccess.getCharacteristicSetReferenceAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getCharacteristicSetReferenceAccess().getRefAssignment_1()); }
		(rule__CharacteristicSetReference__RefAssignment_1)
		{ after(grammarAccess.getCharacteristicSetReferenceAccess().getRefAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristsicSetOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristsicSetOperationAccess().getCreateSetOperationParserRuleCall_0()); }
		ruleCreateSetOperation
		{ after(grammarAccess.getCharacteristsicSetOperationAccess().getCreateSetOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCharacteristsicSetOperationAccess().getIntersectionOperationParserRuleCall_1()); }
		ruleIntersectionOperation
		{ after(grammarAccess.getCharacteristsicSetOperationAccess().getIntersectionOperationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCharacteristsicSetOperationAccess().getUnionOperationParserRuleCall_2()); }
		ruleUnionOperation
		{ after(grammarAccess.getCharacteristsicSetOperationAccess().getUnionOperationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCharacteristsicSetOperationAccess().getSubtractOperationParserRuleCall_3()); }
		ruleSubtractOperation
		{ after(grammarAccess.getCharacteristsicSetOperationAccess().getSubtractOperationParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalNegationOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalNegationOperationAccess().getEncapsulatedLogicalOperationParserRuleCall_0()); }
		ruleEncapsulatedLogicalOperation
		{ after(grammarAccess.getLogicalNegationOperationAccess().getEncapsulatedLogicalOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalNegationOperationAccess().getGroup_1()); }
		(rule__LogicalNegationOperation__Group_1__0)
		{ after(grammarAccess.getLogicalNegationOperationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EncapsulatedLogicalOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEncapsulatedLogicalOperationAccess().getSimpleBooleanOperationParserRuleCall_0()); }
		ruleSimpleBooleanOperation
		{ after(grammarAccess.getEncapsulatedLogicalOperationAccess().getSimpleBooleanOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEncapsulatedLogicalOperationAccess().getGroup_1()); }
		(rule__EncapsulatedLogicalOperation__Group_1__0)
		{ after(grammarAccess.getEncapsulatedLogicalOperationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleBooleanOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleBooleanOperationAccess().getEmptySetOperationParserRuleCall_0()); }
		ruleEmptySetOperation
		{ after(grammarAccess.getSimpleBooleanOperationAccess().getEmptySetOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleBooleanOperationAccess().getVariableEqualityOperationParserRuleCall_1()); }
		ruleVariableEqualityOperation
		{ after(grammarAccess.getSimpleBooleanOperationAccess().getVariableEqualityOperationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleBooleanOperationAccess().getVariableInequalityOperationParserRuleCall_2()); }
		ruleVariableInequalityOperation
		{ after(grammarAccess.getSimpleBooleanOperationAccess().getVariableInequalityOperationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleBooleanOperationAccess().getElementOfOperationParserRuleCall_3()); }
		ruleElementOfOperation
		{ after(grammarAccess.getSimpleBooleanOperationAccess().getElementOfOperationParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetModelTypeAccess().getOperationModelEnumLiteralDeclaration_0()); }
		('OperationModel')
		{ after(grammarAccess.getTargetModelTypeAccess().getOperationModelEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTargetModelTypeAccess().getDataCentricPalladioEnumLiteralDeclaration_1()); }
		('DataCentricPalladio')
		{ after(grammarAccess.getTargetModelTypeAccess().getDataCentricPalladioEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTargetModelTypeAccess().getExtendedDFDEnumLiteralDeclaration_2()); }
		('ExtendedDFD')
		{ after(grammarAccess.getTargetModelTypeAccess().getExtendedDFDEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getTargetModelTypeAssignment_0()); }
	(rule__Model__TargetModelTypeAssignment_0)?
	{ after(grammarAccess.getModelAccess().getTargetModelTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getElementsAssignment_1()); }
	(rule__Model__ElementsAssignment_1)*
	{ after(grammarAccess.getModelAccess().getElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TargetModelTypeDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetModelTypeDef__Group__0__Impl
	rule__TargetModelTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetModelTypeDefAccess().getTargetKeyword_0()); }
	'target'
	{ after(grammarAccess.getTargetModelTypeDefAccess().getTargetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetModelTypeDef__Group__1__Impl
	rule__TargetModelTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetModelTypeDefAccess().getTypeAssignment_1()); }
	(rule__TargetModelTypeDef__TypeAssignment_1)
	{ after(grammarAccess.getTargetModelTypeDefAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetModelTypeDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetModelTypeDefAccess().getGroup_2()); }
	(rule__TargetModelTypeDef__Group_2__0)?
	{ after(grammarAccess.getTargetModelTypeDefAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TargetModelTypeDef__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetModelTypeDef__Group_2__0__Impl
	rule__TargetModelTypeDef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetModelTypeDefAccess().getUsingKeyword_2_0()); }
	'using'
	{ after(grammarAccess.getTargetModelTypeDefAccess().getUsingKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetModelTypeDef__Group_2__1__Impl
	rule__TargetModelTypeDef__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetModelTypeDefAccess().getTypeContainerAssignment_2_1()); }
	(rule__TargetModelTypeDef__TypeContainerAssignment_2_1)
	{ after(grammarAccess.getTargetModelTypeDefAccess().getTypeContainerAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetModelTypeDef__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetModelTypeDefAccess().getGroup_2_2()); }
	(rule__TargetModelTypeDef__Group_2_2__0)?
	{ after(grammarAccess.getTargetModelTypeDefAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TargetModelTypeDef__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetModelTypeDef__Group_2_2__0__Impl
	rule__TargetModelTypeDef__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetModelTypeDefAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getTargetModelTypeDefAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetModelTypeDef__Group_2_2__1__Impl
	rule__TargetModelTypeDef__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetModelTypeDefAccess().getAllocationModelAssignment_2_2_1()); }
	(rule__TargetModelTypeDef__AllocationModelAssignment_2_2_1)
	{ after(grammarAccess.getTargetModelTypeDefAccess().getAllocationModelAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group_2_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetModelTypeDef__Group_2_2__2__Impl
	rule__TargetModelTypeDef__Group_2_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group_2_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetModelTypeDefAccess().getCommaKeyword_2_2_2()); }
	','
	{ after(grammarAccess.getTargetModelTypeDefAccess().getCommaKeyword_2_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group_2_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetModelTypeDef__Group_2_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__Group_2_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetModelTypeDefAccess().getUsageModelAssignment_2_2_3()); }
	(rule__TargetModelTypeDef__UsageModelAssignment_2_2_3)
	{ after(grammarAccess.getTargetModelTypeDefAccess().getUsageModelAssignment_2_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractElement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractElement__Group_4__0__Impl
	rule__AbstractElement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractElementAccess().getAbstractElementAction_4_0()); }
	()
	{ after(grammarAccess.getAbstractElementAccess().getAbstractElementAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractElement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractElementAccess().getSL_COMMENTTerminalRuleCall_4_1()); }
	RULE_SL_COMMENT
	{ after(grammarAccess.getAbstractElementAccess().getSL_COMMENTTerminalRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CharacteristicType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicType__Group__0__Impl
	rule__CharacteristicType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getCharacteristicTypeAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicType__Group__1__Impl
	rule__CharacteristicType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeAccess().getNameAssignment_1()); }
	(rule__CharacteristicType__NameAssignment_1)
	{ after(grammarAccess.getCharacteristicTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicType__Group__2__Impl
	rule__CharacteristicType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getCharacteristicTypeAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeAccess().getRefAssignment_3()); }
	(rule__CharacteristicType__RefAssignment_3)
	{ after(grammarAccess.getCharacteristicTypeAccess().getRefAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CharacteristicClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicClass__Group__0__Impl
	rule__CharacteristicClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicClassAccess().getClassKeyword_0()); }
	'class'
	{ after(grammarAccess.getCharacteristicClassAccess().getClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicClass__Group__1__Impl
	rule__CharacteristicClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicClassAccess().getNameAssignment_1()); }
	(rule__CharacteristicClass__NameAssignment_1)
	{ after(grammarAccess.getCharacteristicClassAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicClass__Group__2__Impl
	rule__CharacteristicClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicClassAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getCharacteristicClassAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicClass__Group__3__Impl
	rule__CharacteristicClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicClassAccess().getMembersAssignment_3()); }
	(rule__CharacteristicClass__MembersAssignment_3)
	{ after(grammarAccess.getCharacteristicClassAccess().getMembersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicClass__Group__4__Impl
	rule__CharacteristicClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicClassAccess().getGroup_4()); }
	(rule__CharacteristicClass__Group_4__0)*
	{ after(grammarAccess.getCharacteristicClassAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicClass__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicClassAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getCharacteristicClassAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CharacteristicClass__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicClass__Group_4__0__Impl
	rule__CharacteristicClass__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicClassAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getCharacteristicClassAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicClass__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicClassAccess().getMembersAssignment_4_1()); }
	(rule__CharacteristicClass__MembersAssignment_4_1)
	{ after(grammarAccess.getCharacteristicClassAccess().getMembersAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CharacteristicTypeSelector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicTypeSelector__Group__0__Impl
	rule__CharacteristicTypeSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getRefAssignment_0()); }
	(rule__CharacteristicTypeSelector__RefAssignment_0)
	{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicTypeSelector__Group__1__Impl
	rule__CharacteristicTypeSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicTypeSelector__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getAlternatives_2()); }
	(rule__CharacteristicTypeSelector__Alternatives_2)
	{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CharacteristicTypeSelector__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicTypeSelector__Group_2_0__0__Impl
	rule__CharacteristicTypeSelector__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getNegatedAssignment_2_0_0()); }
	(rule__CharacteristicTypeSelector__NegatedAssignment_2_0_0)?
	{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getNegatedAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicTypeSelector__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsAssignment_2_0_1()); }
	(rule__CharacteristicTypeSelector__LiteralsAssignment_2_0_1)
	{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CharacteristicTypeSelector__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicTypeSelector__Group_2_1__0__Impl
	rule__CharacteristicTypeSelector__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getLeftSquareBracketKeyword_2_1_0()); }
	'['
	{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getLeftSquareBracketKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicTypeSelector__Group_2_1__1__Impl
	rule__CharacteristicTypeSelector__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsAssignment_2_1_1()); }
	(rule__CharacteristicTypeSelector__LiteralsAssignment_2_1_1)
	{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicTypeSelector__Group_2_1__2__Impl
	rule__CharacteristicTypeSelector__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getGroup_2_1_2()); }
	(rule__CharacteristicTypeSelector__Group_2_1_2__0)*
	{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getGroup_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicTypeSelector__Group_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getRightSquareBracketKeyword_2_1_3()); }
	']'
	{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getRightSquareBracketKeyword_2_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CharacteristicTypeSelector__Group_2_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicTypeSelector__Group_2_1_2__0__Impl
	rule__CharacteristicTypeSelector__Group_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getCommaKeyword_2_1_2_0()); }
	','
	{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getCommaKeyword_2_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicTypeSelector__Group_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsAssignment_2_1_2_1()); }
	(rule__CharacteristicTypeSelector__LiteralsAssignment_2_1_2_1)
	{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsAssignment_2_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CharacteristicTypeSelector__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicTypeSelector__Group_2_2__0__Impl
	rule__CharacteristicTypeSelector__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getIsVariableSelectorAssignment_2_2_0()); }
	(rule__CharacteristicTypeSelector__IsVariableSelectorAssignment_2_2_0)
	{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getIsVariableSelectorAssignment_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicTypeSelector__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getVariableAssignment_2_2_1()); }
	(rule__CharacteristicTypeSelector__VariableAssignment_2_2_1)
	{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getVariableAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CharacteristicSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicSet__Group__0__Impl
	rule__CharacteristicSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicSetAccess().getNameAssignment_0()); }
	(rule__CharacteristicSet__NameAssignment_0)
	{ after(grammarAccess.getCharacteristicSetAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicSet__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicSetAccess().getLeftCurlyBracketRightCurlyBracketKeyword_1()); }
	'{}'
	{ after(grammarAccess.getCharacteristicSetAccess().getLeftCurlyBracketRightCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Include__Group__0__Impl
	rule__Include__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getIncludeAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Include__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeAccess().getImportURIAssignment_1()); }
	(rule__Include__ImportURIAssignment_1)
	{ after(grammarAccess.getIncludeAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getConstraintKeyword_0()); }
	'constraint'
	{ after(grammarAccess.getConstraintAccess().getConstraintKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getNameAssignment_1()); }
	(rule__Constraint__NameAssignment_1)
	{ after(grammarAccess.getConstraintAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__2__Impl
	rule__Constraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__3__Impl
	rule__Constraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getRuleAssignment_3()); }
	(rule__Constraint__RuleAssignment_3)
	{ after(grammarAccess.getConstraintAccess().getRuleAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getDataSelectorsAssignment_0()); }
	(rule__Rule__DataSelectorsAssignment_0)
	{ after(grammarAccess.getRuleAccess().getDataSelectorsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_1()); }
	(rule__Rule__Group_1__0)*
	{ after(grammarAccess.getRuleAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getStatementAssignment_2()); }
	(rule__Rule__StatementAssignment_2)
	{ after(grammarAccess.getRuleAccess().getStatementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getDestinationSelectorsAssignment_3()); }
	(rule__Rule__DestinationSelectorsAssignment_3)
	{ after(grammarAccess.getRuleAccess().getDestinationSelectorsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__4__Impl
	rule__Rule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_4()); }
	(rule__Rule__Group_4__0)*
	{ after(grammarAccess.getRuleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getConditionAssignment_5()); }
	(rule__Rule__ConditionAssignment_5)?
	{ after(grammarAccess.getRuleAccess().getConditionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_1__0__Impl
	rule__Rule__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getAmpersandKeyword_1_0()); }
	'&'
	{ after(grammarAccess.getRuleAccess().getAmpersandKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getDataSelectorsAssignment_1_1()); }
	(rule__Rule__DataSelectorsAssignment_1_1)
	{ after(grammarAccess.getRuleAccess().getDataSelectorsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_4__0__Impl
	rule__Rule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getAmpersandKeyword_4_0()); }
	'&'
	{ after(grammarAccess.getRuleAccess().getAmpersandKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getDestinationSelectorsAssignment_4_1()); }
	(rule__Rule__DestinationSelectorsAssignment_4_1)
	{ after(grammarAccess.getRuleAccess().getDestinationSelectorsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSelector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSelector__Group__0__Impl
	rule__AttributeSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSelectorAccess().getDataAttributeKeyword_0()); }
	'data.attribute.'
	{ after(grammarAccess.getAttributeSelectorAccess().getDataAttributeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSelector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSelectorAccess().getRefAssignment_1()); }
	(rule__AttributeSelector__RefAssignment_1)
	{ after(grammarAccess.getAttributeSelectorAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeClassSelector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeClassSelector__Group__0__Impl
	rule__AttributeClassSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeClassSelector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeClassSelectorAccess().getDataClassKeyword_0()); }
	'data.class.'
	{ after(grammarAccess.getAttributeClassSelectorAccess().getDataClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeClassSelector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeClassSelector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeClassSelector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeClassSelectorAccess().getRefAssignment_1()); }
	(rule__AttributeClassSelector__RefAssignment_1)
	{ after(grammarAccess.getAttributeClassSelectorAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySelector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySelector__Group__0__Impl
	rule__PropertySelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySelector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySelectorAccess().getNodePropertyKeyword_0()); }
	'node.property.'
	{ after(grammarAccess.getPropertySelectorAccess().getNodePropertyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySelector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySelector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySelector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySelectorAccess().getRefAssignment_1()); }
	(rule__PropertySelector__RefAssignment_1)
	{ after(grammarAccess.getPropertySelectorAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyClassSelector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyClassSelector__Group__0__Impl
	rule__PropertyClassSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyClassSelector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyClassSelectorAccess().getNodeClassKeyword_0()); }
	'node.class.'
	{ after(grammarAccess.getPropertyClassSelectorAccess().getNodeClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyClassSelector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyClassSelector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyClassSelector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyClassSelectorAccess().getRefAssignment_1()); }
	(rule__PropertyClassSelector__RefAssignment_1)
	{ after(grammarAccess.getPropertyClassSelectorAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeIdentitiySelector__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeIdentitiySelector__Group_0__0__Impl
	rule__NodeIdentitiySelector__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeIdentitiySelectorAccess().getNodeNameKeyword_0_0()); }
	'node.name.'
	{ after(grammarAccess.getNodeIdentitiySelectorAccess().getNodeNameKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeIdentitiySelector__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeIdentitiySelectorAccess().getNameAssignment_0_1()); }
	(rule__NodeIdentitiySelector__NameAssignment_0_1)
	{ after(grammarAccess.getNodeIdentitiySelectorAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeIdentitiySelector__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeIdentitiySelector__Group_1__0__Impl
	rule__NodeIdentitiySelector__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeIdentitiySelectorAccess().getNodeIdentityKeyword_1_0()); }
	'node.identity.'
	{ after(grammarAccess.getNodeIdentitiySelectorAccess().getNodeIdentityKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeIdentitiySelector__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeIdentitiySelectorAccess().getAlternatives_1_1()); }
	(rule__NodeIdentitiySelector__Alternatives_1_1)
	{ after(grammarAccess.getNodeIdentitiySelectorAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeIdentitiySelector__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeIdentitiySelector__Group_1_1_0__0__Impl
	rule__NodeIdentitiySelector__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeIdentitiySelectorAccess().getAssemblyAssignment_1_1_0_0()); }
	(rule__NodeIdentitiySelector__AssemblyAssignment_1_1_0_0)
	{ after(grammarAccess.getNodeIdentitiySelectorAccess().getAssemblyAssignment_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeIdentitiySelector__Group_1_1_0__1__Impl
	rule__NodeIdentitiySelector__Group_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeIdentitiySelectorAccess().getFullStopKeyword_1_1_0_1()); }
	'.'
	{ after(grammarAccess.getNodeIdentitiySelectorAccess().getFullStopKeyword_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Group_1_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeIdentitiySelector__Group_1_1_0__2__Impl
	rule__NodeIdentitiySelector__Group_1_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Group_1_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeIdentitiySelectorAccess().getComponentAssignment_1_1_0_2()); }
	(rule__NodeIdentitiySelector__ComponentAssignment_1_1_0_2)
	{ after(grammarAccess.getNodeIdentitiySelectorAccess().getComponentAssignment_1_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Group_1_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeIdentitiySelector__Group_1_1_0__3__Impl
	rule__NodeIdentitiySelector__Group_1_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Group_1_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeIdentitiySelectorAccess().getFullStopKeyword_1_1_0_3()); }
	'.'
	{ after(grammarAccess.getNodeIdentitiySelectorAccess().getFullStopKeyword_1_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Group_1_1_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeIdentitiySelector__Group_1_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__Group_1_1_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeIdentitiySelectorAccess().getSeffAssignment_1_1_0_4()); }
	(rule__NodeIdentitiySelector__SeffAssignment_1_1_0_4)
	{ after(grammarAccess.getNodeIdentitiySelectorAccess().getSeffAssignment_1_1_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getModalityAssignment_0()); }
	(rule__Statement__ModalityAssignment_0)
	{ after(grammarAccess.getStatementAccess().getModalityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getTypeAssignment_1()); }
	(rule__Statement__TypeAssignment_1)
	{ after(grammarAccess.getStatementAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getWHEREKeyword_0()); }
	'WHERE'
	{ after(grammarAccess.getConditionAccess().getWHEREKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getOperationAssignment_1()); }
	(rule__Condition__OperationAssignment_1)
	{ after(grammarAccess.getConditionAccess().getOperationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrOperation__Group__0__Impl
	rule__LogicalOrOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrOperationAccess().getLogicalAndOperationParserRuleCall_0()); }
	ruleLogicalAndOperation
	{ after(grammarAccess.getLogicalOrOperationAccess().getLogicalAndOperationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrOperationAccess().getGroup_1()); }
	(rule__LogicalOrOperation__Group_1__0)*
	{ after(grammarAccess.getLogicalOrOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrOperation__Group_1__0__Impl
	rule__LogicalOrOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrOperationAccess().getLogicalOrOperationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalOrOperationAccess().getLogicalOrOperationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrOperation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrOperation__Group_1__1__Impl
	rule__LogicalOrOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrOperation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrOperationAccess().getVerticalLineKeyword_1_1()); }
	'|'
	{ after(grammarAccess.getLogicalOrOperationAccess().getVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrOperation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrOperation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrOperationAccess().getRightAssignment_1_2()); }
	(rule__LogicalOrOperation__RightAssignment_1_2)
	{ after(grammarAccess.getLogicalOrOperationAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndOperation__Group__0__Impl
	rule__LogicalAndOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndOperationAccess().getLogicalNegationOperationParserRuleCall_0()); }
	ruleLogicalNegationOperation
	{ after(grammarAccess.getLogicalAndOperationAccess().getLogicalNegationOperationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndOperationAccess().getGroup_1()); }
	(rule__LogicalAndOperation__Group_1__0)*
	{ after(grammarAccess.getLogicalAndOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndOperation__Group_1__0__Impl
	rule__LogicalAndOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndOperationAccess().getLogicalAndOperationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalAndOperationAccess().getLogicalAndOperationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndOperation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndOperation__Group_1__1__Impl
	rule__LogicalAndOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndOperation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndOperationAccess().getAmpersandKeyword_1_1()); }
	'&'
	{ after(grammarAccess.getLogicalAndOperationAccess().getAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndOperation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndOperation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndOperationAccess().getRightAssignment_1_2()); }
	(rule__LogicalAndOperation__RightAssignment_1_2)
	{ after(grammarAccess.getLogicalAndOperationAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalNegationOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalNegationOperation__Group_1__0__Impl
	rule__LogicalNegationOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalNegationOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalNegationOperationAccess().getLogicalNegationOperationAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalNegationOperationAccess().getLogicalNegationOperationAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalNegationOperation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalNegationOperation__Group_1__1__Impl
	rule__LogicalNegationOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalNegationOperation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalNegationOperationAccess().getExclamationMarkKeyword_1_1()); }
	'!'
	{ after(grammarAccess.getLogicalNegationOperationAccess().getExclamationMarkKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalNegationOperation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalNegationOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalNegationOperation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalNegationOperationAccess().getValueAssignment_1_2()); }
	(rule__LogicalNegationOperation__ValueAssignment_1_2)
	{ after(grammarAccess.getLogicalNegationOperationAccess().getValueAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EncapsulatedLogicalOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EncapsulatedLogicalOperation__Group_1__0__Impl
	rule__EncapsulatedLogicalOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EncapsulatedLogicalOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEncapsulatedLogicalOperationAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getEncapsulatedLogicalOperationAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EncapsulatedLogicalOperation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EncapsulatedLogicalOperation__Group_1__1__Impl
	rule__EncapsulatedLogicalOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EncapsulatedLogicalOperation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEncapsulatedLogicalOperationAccess().getLogicalOrOperationParserRuleCall_1_1()); }
	ruleLogicalOrOperation
	{ after(grammarAccess.getEncapsulatedLogicalOperationAccess().getLogicalOrOperationParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EncapsulatedLogicalOperation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EncapsulatedLogicalOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EncapsulatedLogicalOperation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEncapsulatedLogicalOperationAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getEncapsulatedLogicalOperationAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableEqualityOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableEqualityOperation__Group__0__Impl
	rule__VariableEqualityOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableEqualityOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableEqualityOperationAccess().getLeftAssignment_0()); }
	(rule__VariableEqualityOperation__LeftAssignment_0)
	{ after(grammarAccess.getVariableEqualityOperationAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableEqualityOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableEqualityOperation__Group__1__Impl
	rule__VariableEqualityOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableEqualityOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableEqualityOperationAccess().getEqualsSignEqualsSignKeyword_1()); }
	'=='
	{ after(grammarAccess.getVariableEqualityOperationAccess().getEqualsSignEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableEqualityOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableEqualityOperation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableEqualityOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableEqualityOperationAccess().getRightAssignment_2()); }
	(rule__VariableEqualityOperation__RightAssignment_2)
	{ after(grammarAccess.getVariableEqualityOperationAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableInequalityOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableInequalityOperation__Group__0__Impl
	rule__VariableInequalityOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInequalityOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableInequalityOperationAccess().getLeftAssignment_0()); }
	(rule__VariableInequalityOperation__LeftAssignment_0)
	{ after(grammarAccess.getVariableInequalityOperationAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInequalityOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableInequalityOperation__Group__1__Impl
	rule__VariableInequalityOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInequalityOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableInequalityOperationAccess().getExclamationMarkEqualsSignKeyword_1()); }
	'!='
	{ after(grammarAccess.getVariableInequalityOperationAccess().getExclamationMarkEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInequalityOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableInequalityOperation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInequalityOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableInequalityOperationAccess().getRightAssignment_2()); }
	(rule__VariableInequalityOperation__RightAssignment_2)
	{ after(grammarAccess.getVariableInequalityOperationAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmptySetOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptySetOperation__Group__0__Impl
	rule__EmptySetOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptySetOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptySetOperationAccess().getIsEmptyKeyword_0()); }
	'isEmpty'
	{ after(grammarAccess.getEmptySetOperationAccess().getIsEmptyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptySetOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptySetOperation__Group__1__Impl
	rule__EmptySetOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptySetOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptySetOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getEmptySetOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptySetOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptySetOperation__Group__2__Impl
	rule__EmptySetOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptySetOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptySetOperationAccess().getValueAssignment_2()); }
	(rule__EmptySetOperation__ValueAssignment_2)
	{ after(grammarAccess.getEmptySetOperationAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptySetOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptySetOperation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptySetOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptySetOperationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getEmptySetOperationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntersectionOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntersectionOperation__Group__0__Impl
	rule__IntersectionOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntersectionOperationAccess().getIntersectionKeyword_0()); }
	'intersection'
	{ after(grammarAccess.getIntersectionOperationAccess().getIntersectionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntersectionOperation__Group__1__Impl
	rule__IntersectionOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntersectionOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIntersectionOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntersectionOperation__Group__2__Impl
	rule__IntersectionOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntersectionOperationAccess().getLeftAssignment_2()); }
	(rule__IntersectionOperation__LeftAssignment_2)
	{ after(grammarAccess.getIntersectionOperationAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntersectionOperation__Group__3__Impl
	rule__IntersectionOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntersectionOperationAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getIntersectionOperationAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntersectionOperation__Group__4__Impl
	rule__IntersectionOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntersectionOperationAccess().getRightAssignment_4()); }
	(rule__IntersectionOperation__RightAssignment_4)
	{ after(grammarAccess.getIntersectionOperationAccess().getRightAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntersectionOperation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntersectionOperationAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getIntersectionOperationAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnionOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionOperation__Group__0__Impl
	rule__UnionOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionOperationAccess().getUnionKeyword_0()); }
	'union'
	{ after(grammarAccess.getUnionOperationAccess().getUnionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionOperation__Group__1__Impl
	rule__UnionOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUnionOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionOperation__Group__2__Impl
	rule__UnionOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionOperationAccess().getLeftAssignment_2()); }
	(rule__UnionOperation__LeftAssignment_2)
	{ after(grammarAccess.getUnionOperationAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionOperation__Group__3__Impl
	rule__UnionOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionOperationAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getUnionOperationAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionOperation__Group__4__Impl
	rule__UnionOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionOperationAccess().getRightAssignment_4()); }
	(rule__UnionOperation__RightAssignment_4)
	{ after(grammarAccess.getUnionOperationAccess().getRightAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionOperation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionOperationAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getUnionOperationAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubtractOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtractOperation__Group__0__Impl
	rule__SubtractOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtractOperationAccess().getSubtractKeyword_0()); }
	'subtract'
	{ after(grammarAccess.getSubtractOperationAccess().getSubtractKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtractOperation__Group__1__Impl
	rule__SubtractOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtractOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSubtractOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtractOperation__Group__2__Impl
	rule__SubtractOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtractOperationAccess().getLeftAssignment_2()); }
	(rule__SubtractOperation__LeftAssignment_2)
	{ after(grammarAccess.getSubtractOperationAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtractOperation__Group__3__Impl
	rule__SubtractOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtractOperationAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getSubtractOperationAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtractOperation__Group__4__Impl
	rule__SubtractOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtractOperationAccess().getRightAssignment_4()); }
	(rule__SubtractOperation__RightAssignment_4)
	{ after(grammarAccess.getSubtractOperationAccess().getRightAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtractOperation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtractOperationAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getSubtractOperationAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementOfOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementOfOperation__Group__0__Impl
	rule__ElementOfOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementOfOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementOfOperationAccess().getElementOfKeyword_0()); }
	'elementOf'
	{ after(grammarAccess.getElementOfOperationAccess().getElementOfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementOfOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementOfOperation__Group__1__Impl
	rule__ElementOfOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementOfOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementOfOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getElementOfOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementOfOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementOfOperation__Group__2__Impl
	rule__ElementOfOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementOfOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementOfOperationAccess().getLeftAssignment_2()); }
	(rule__ElementOfOperation__LeftAssignment_2)
	{ after(grammarAccess.getElementOfOperationAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementOfOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementOfOperation__Group__3__Impl
	rule__ElementOfOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementOfOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementOfOperationAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getElementOfOperationAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementOfOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementOfOperation__Group__4__Impl
	rule__ElementOfOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementOfOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementOfOperationAccess().getRightAssignment_4()); }
	(rule__ElementOfOperation__RightAssignment_4)
	{ after(grammarAccess.getElementOfOperationAccess().getRightAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementOfOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementOfOperation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementOfOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementOfOperationAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getElementOfOperationAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateSetOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateSetOperation__Group__0__Impl
	rule__CreateSetOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSetOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateSetOperationAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getCreateSetOperationAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSetOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateSetOperation__Group__1__Impl
	rule__CreateSetOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSetOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateSetOperationAccess().getValueAssignment_1()); }
	(rule__CreateSetOperation__ValueAssignment_1)
	{ after(grammarAccess.getCreateSetOperationAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSetOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateSetOperation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSetOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateSetOperationAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getCreateSetOperationAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__TargetModelTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTargetModelTypeTargetModelTypeDefParserRuleCall_0_0()); }
		ruleTargetModelTypeDef
		{ after(grammarAccess.getModelAccess().getTargetModelTypeTargetModelTypeDefParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsAbstractElementParserRuleCall_1_0()); }
		ruleAbstractElement
		{ after(grammarAccess.getModelAccess().getElementsAbstractElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetModelTypeDefAccess().getTypeTargetModelTypeEnumRuleCall_1_0()); }
		ruleTargetModelType
		{ after(grammarAccess.getTargetModelTypeDefAccess().getTypeTargetModelTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__TypeContainerAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetModelTypeDefAccess().getTypeContainerDataDictionaryCharacterizedCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getTargetModelTypeDefAccess().getTypeContainerDataDictionaryCharacterizedIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTargetModelTypeDefAccess().getTypeContainerDataDictionaryCharacterizedIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getTargetModelTypeDefAccess().getTypeContainerDataDictionaryCharacterizedCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__AllocationModelAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetModelTypeDefAccess().getAllocationModelAllocationCrossReference_2_2_1_0()); }
		(
			{ before(grammarAccess.getTargetModelTypeDefAccess().getAllocationModelAllocationIDTerminalRuleCall_2_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTargetModelTypeDefAccess().getAllocationModelAllocationIDTerminalRuleCall_2_2_1_0_1()); }
		)
		{ after(grammarAccess.getTargetModelTypeDefAccess().getAllocationModelAllocationCrossReference_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelTypeDef__UsageModelAssignment_2_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetModelTypeDefAccess().getUsageModelUsageModelCrossReference_2_2_3_0()); }
		(
			{ before(grammarAccess.getTargetModelTypeDefAccess().getUsageModelUsageModelIDTerminalRuleCall_2_2_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTargetModelTypeDefAccess().getUsageModelUsageModelIDTerminalRuleCall_2_2_3_0_1()); }
		)
		{ after(grammarAccess.getTargetModelTypeDefAccess().getUsageModelUsageModelCrossReference_2_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCharacteristicTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicType__RefAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicTypeAccess().getRefEnumCharacteristicTypeCrossReference_3_0()); }
		(
			{ before(grammarAccess.getCharacteristicTypeAccess().getRefEnumCharacteristicTypeIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCharacteristicTypeAccess().getRefEnumCharacteristicTypeIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getCharacteristicTypeAccess().getRefEnumCharacteristicTypeCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicClassAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCharacteristicClassAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__MembersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicClassAccess().getMembersCharacteristicTypeSelectorParserRuleCall_3_0()); }
		ruleCharacteristicTypeSelector
		{ after(grammarAccess.getCharacteristicClassAccess().getMembersCharacteristicTypeSelectorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicClass__MembersAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicClassAccess().getMembersCharacteristicTypeSelectorParserRuleCall_4_1_0()); }
		ruleCharacteristicTypeSelector
		{ after(grammarAccess.getCharacteristicClassAccess().getMembersCharacteristicTypeSelectorParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getRefCharacteristicTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getRefCharacteristicTypeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getRefCharacteristicTypeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getRefCharacteristicTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__NegatedAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getNegatedExclamationMarkKeyword_2_0_0_0()); }
		(
			{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getNegatedExclamationMarkKeyword_2_0_0_0()); }
			'!'
			{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getNegatedExclamationMarkKeyword_2_0_0_0()); }
		)
		{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getNegatedExclamationMarkKeyword_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__LiteralsAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsLiteralCrossReference_2_0_1_0()); }
		(
			{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsLiteralIDTerminalRuleCall_2_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsLiteralIDTerminalRuleCall_2_0_1_0_1()); }
		)
		{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsLiteralCrossReference_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__LiteralsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsLiteralCrossReference_2_1_1_0()); }
		(
			{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsLiteralIDTerminalRuleCall_2_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsLiteralIDTerminalRuleCall_2_1_1_0_1()); }
		)
		{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsLiteralCrossReference_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__LiteralsAssignment_2_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsLiteralCrossReference_2_1_2_1_0()); }
		(
			{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsLiteralIDTerminalRuleCall_2_1_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsLiteralIDTerminalRuleCall_2_1_2_1_0_1()); }
		)
		{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getLiteralsLiteralCrossReference_2_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__IsVariableSelectorAssignment_2_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getIsVariableSelectorDollarSignKeyword_2_2_0_0()); }
		(
			{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getIsVariableSelectorDollarSignKeyword_2_2_0_0()); }
			'$'
			{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getIsVariableSelectorDollarSignKeyword_2_2_0_0()); }
		)
		{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getIsVariableSelectorDollarSignKeyword_2_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicTypeSelector__VariableAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicTypeSelectorAccess().getVariableCharacteristicVariableTypeParserRuleCall_2_2_1_0()); }
		ruleCharacteristicVariableType
		{ after(grammarAccess.getCharacteristicTypeSelectorAccess().getVariableCharacteristicVariableTypeParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicVariable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getCharacteristicVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicSet__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicSetAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getCharacteristicSetAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getIncludeAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConstraintAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__RuleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getRuleRuleParserRuleCall_3_0()); }
		ruleRule
		{ after(grammarAccess.getConstraintAccess().getRuleRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__DataSelectorsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getDataSelectorsDataSelectorParserRuleCall_0_0()); }
		ruleDataSelector
		{ after(grammarAccess.getRuleAccess().getDataSelectorsDataSelectorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__DataSelectorsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getDataSelectorsDataSelectorParserRuleCall_1_1_0()); }
		ruleDataSelector
		{ after(grammarAccess.getRuleAccess().getDataSelectorsDataSelectorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__StatementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getStatementStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getRuleAccess().getStatementStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__DestinationSelectorsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getDestinationSelectorsDestinationSelectorParserRuleCall_3_0()); }
		ruleDestinationSelector
		{ after(grammarAccess.getRuleAccess().getDestinationSelectorsDestinationSelectorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__DestinationSelectorsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getDestinationSelectorsDestinationSelectorParserRuleCall_4_1_0()); }
		ruleDestinationSelector
		{ after(grammarAccess.getRuleAccess().getDestinationSelectorsDestinationSelectorParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ConditionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getConditionConditionParserRuleCall_5_0()); }
		ruleCondition
		{ after(grammarAccess.getRuleAccess().getConditionConditionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSelectorAccess().getRefCharacteristicTypeSelectorParserRuleCall_1_0()); }
		ruleCharacteristicTypeSelector
		{ after(grammarAccess.getAttributeSelectorAccess().getRefCharacteristicTypeSelectorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeClassSelector__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeClassSelectorAccess().getRefCharacteristicClassCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAttributeClassSelectorAccess().getRefCharacteristicClassIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttributeClassSelectorAccess().getRefCharacteristicClassIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAttributeClassSelectorAccess().getRefCharacteristicClassCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySelector__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertySelectorAccess().getRefCharacteristicTypeSelectorParserRuleCall_1_0()); }
		ruleCharacteristicTypeSelector
		{ after(grammarAccess.getPropertySelectorAccess().getRefCharacteristicTypeSelectorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyClassSelector__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyClassSelectorAccess().getRefCharacteristicClassCrossReference_1_0()); }
		(
			{ before(grammarAccess.getPropertyClassSelectorAccess().getRefCharacteristicClassIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPropertyClassSelectorAccess().getRefCharacteristicClassIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getPropertyClassSelectorAccess().getRefCharacteristicClassCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeIdentitiySelectorAccess().getNameSTRINGTerminalRuleCall_0_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getNodeIdentitiySelectorAccess().getNameSTRINGTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__AssemblyAssignment_1_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeIdentitiySelectorAccess().getAssemblyAssemblyContextCrossReference_1_1_0_0_0()); }
		(
			{ before(grammarAccess.getNodeIdentitiySelectorAccess().getAssemblyAssemblyContextIDTerminalRuleCall_1_1_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNodeIdentitiySelectorAccess().getAssemblyAssemblyContextIDTerminalRuleCall_1_1_0_0_0_1()); }
		)
		{ after(grammarAccess.getNodeIdentitiySelectorAccess().getAssemblyAssemblyContextCrossReference_1_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__ComponentAssignment_1_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeIdentitiySelectorAccess().getComponentBasicComponentCrossReference_1_1_0_2_0()); }
		(
			{ before(grammarAccess.getNodeIdentitiySelectorAccess().getComponentBasicComponentIDTerminalRuleCall_1_1_0_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNodeIdentitiySelectorAccess().getComponentBasicComponentIDTerminalRuleCall_1_1_0_2_0_1()); }
		)
		{ after(grammarAccess.getNodeIdentitiySelectorAccess().getComponentBasicComponentCrossReference_1_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__SeffAssignment_1_1_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeIdentitiySelectorAccess().getSeffServiceEffectSpecificationCrossReference_1_1_0_4_0()); }
		(
			{ before(grammarAccess.getNodeIdentitiySelectorAccess().getSeffServiceEffectSpecificationIDTerminalRuleCall_1_1_0_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNodeIdentitiySelectorAccess().getSeffServiceEffectSpecificationIDTerminalRuleCall_1_1_0_4_0_1()); }
		)
		{ after(grammarAccess.getNodeIdentitiySelectorAccess().getSeffServiceEffectSpecificationCrossReference_1_1_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeIdentitiySelector__DiaNodeAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeIdentitiySelectorAccess().getDiaNodeCharacterizedNodeCrossReference_1_1_1_0()); }
		(
			{ before(grammarAccess.getNodeIdentitiySelectorAccess().getDiaNodeCharacterizedNodeIDTerminalRuleCall_1_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNodeIdentitiySelectorAccess().getDiaNodeCharacterizedNodeIDTerminalRuleCall_1_1_1_0_1()); }
		)
		{ after(grammarAccess.getNodeIdentitiySelectorAccess().getDiaNodeCharacterizedNodeCrossReference_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ModalityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getModalityStatementModalityParserRuleCall_0_0()); }
		ruleStatementModality
		{ after(grammarAccess.getStatementAccess().getModalityStatementModalityParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTypeStatementTypeParserRuleCall_1_0()); }
		ruleStatementType
		{ after(grammarAccess.getStatementAccess().getTypeStatementTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementTypeAccess().getNameFLOWSKeyword_0()); }
		(
			{ before(grammarAccess.getStatementTypeAccess().getNameFLOWSKeyword_0()); }
			'FLOWS'
			{ after(grammarAccess.getStatementTypeAccess().getNameFLOWSKeyword_0()); }
		)
		{ after(grammarAccess.getStatementTypeAccess().getNameFLOWSKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementModality__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementModalityAccess().getNameNEVERKeyword_0()); }
		(
			{ before(grammarAccess.getStatementModalityAccess().getNameNEVERKeyword_0()); }
			'NEVER'
			{ after(grammarAccess.getStatementModalityAccess().getNameNEVERKeyword_0()); }
		)
		{ after(grammarAccess.getStatementModalityAccess().getNameNEVERKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__OperationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getOperationBooleanOperationParserRuleCall_1_0()); }
		ruleBooleanOperation
		{ after(grammarAccess.getConditionAccess().getOperationBooleanOperationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicReference__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicReferenceAccess().getValueCharacteristicVariableCrossReference_0()); }
		(
			{ before(grammarAccess.getCharacteristicReferenceAccess().getValueCharacteristicVariableIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCharacteristicReferenceAccess().getValueCharacteristicVariableIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getCharacteristicReferenceAccess().getValueCharacteristicVariableCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicSetReference__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicSetReferenceAccess().getValueCharacteristicSetCrossReference_0_0()); }
		(
			{ before(grammarAccess.getCharacteristicSetReferenceAccess().getValueCharacteristicSetIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCharacteristicSetReferenceAccess().getValueCharacteristicSetIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getCharacteristicSetReferenceAccess().getValueCharacteristicSetCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicSetReference__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicSetReferenceAccess().getRefCharacteristsicSetOperationParserRuleCall_1_0()); }
		ruleCharacteristsicSetOperation
		{ after(grammarAccess.getCharacteristicSetReferenceAccess().getRefCharacteristsicSetOperationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrOperation__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOrOperationAccess().getRightLogicalAndOperationParserRuleCall_1_2_0()); }
		ruleLogicalAndOperation
		{ after(grammarAccess.getLogicalOrOperationAccess().getRightLogicalAndOperationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndOperation__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAndOperationAccess().getRightLogicalNegationOperationParserRuleCall_1_2_0()); }
		ruleLogicalNegationOperation
		{ after(grammarAccess.getLogicalAndOperationAccess().getRightLogicalNegationOperationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalNegationOperation__ValueAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalNegationOperationAccess().getValueEncapsulatedLogicalOperationParserRuleCall_1_2_0()); }
		ruleEncapsulatedLogicalOperation
		{ after(grammarAccess.getLogicalNegationOperationAccess().getValueEncapsulatedLogicalOperationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableEqualityOperation__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableEqualityOperationAccess().getLeftCharacteristicReferenceParserRuleCall_0_0()); }
		ruleCharacteristicReference
		{ after(grammarAccess.getVariableEqualityOperationAccess().getLeftCharacteristicReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableEqualityOperation__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableEqualityOperationAccess().getRightCharacteristicReferenceParserRuleCall_2_0()); }
		ruleCharacteristicReference
		{ after(grammarAccess.getVariableEqualityOperationAccess().getRightCharacteristicReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInequalityOperation__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableInequalityOperationAccess().getLeftCharacteristicReferenceParserRuleCall_0_0()); }
		ruleCharacteristicReference
		{ after(grammarAccess.getVariableInequalityOperationAccess().getLeftCharacteristicReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInequalityOperation__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableInequalityOperationAccess().getRightCharacteristicReferenceParserRuleCall_2_0()); }
		ruleCharacteristicReference
		{ after(grammarAccess.getVariableInequalityOperationAccess().getRightCharacteristicReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptySetOperation__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmptySetOperationAccess().getValueCharacteristicSetReferenceParserRuleCall_2_0()); }
		ruleCharacteristicSetReference
		{ after(grammarAccess.getEmptySetOperationAccess().getValueCharacteristicSetReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOperation__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntersectionOperationAccess().getLeftCharacteristicSetReferenceParserRuleCall_2_0()); }
		ruleCharacteristicSetReference
		{ after(grammarAccess.getIntersectionOperationAccess().getLeftCharacteristicSetReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOperation__RightAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntersectionOperationAccess().getRightCharacteristicSetReferenceParserRuleCall_4_0()); }
		ruleCharacteristicSetReference
		{ after(grammarAccess.getIntersectionOperationAccess().getRightCharacteristicSetReferenceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOperation__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnionOperationAccess().getLeftCharacteristicSetReferenceParserRuleCall_2_0()); }
		ruleCharacteristicSetReference
		{ after(grammarAccess.getUnionOperationAccess().getLeftCharacteristicSetReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOperation__RightAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnionOperationAccess().getRightCharacteristicSetReferenceParserRuleCall_4_0()); }
		ruleCharacteristicSetReference
		{ after(grammarAccess.getUnionOperationAccess().getRightCharacteristicSetReferenceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractOperation__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubtractOperationAccess().getLeftCharacteristicSetReferenceParserRuleCall_2_0()); }
		ruleCharacteristicSetReference
		{ after(grammarAccess.getSubtractOperationAccess().getLeftCharacteristicSetReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtractOperation__RightAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubtractOperationAccess().getRightCharacteristicSetReferenceParserRuleCall_4_0()); }
		ruleCharacteristicSetReference
		{ after(grammarAccess.getSubtractOperationAccess().getRightCharacteristicSetReferenceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementOfOperation__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementOfOperationAccess().getLeftCharacteristicReferenceParserRuleCall_2_0()); }
		ruleCharacteristicReference
		{ after(grammarAccess.getElementOfOperationAccess().getLeftCharacteristicReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementOfOperation__RightAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementOfOperationAccess().getRightCharacteristicSetReferenceParserRuleCall_4_0()); }
		ruleCharacteristicSetReference
		{ after(grammarAccess.getElementOfOperationAccess().getRightCharacteristicSetReferenceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateSetOperation__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateSetOperationAccess().getValueCharacteristicReferenceParserRuleCall_1_0()); }
		ruleCharacteristicReference
		{ after(grammarAccess.getCreateSetOperationAccess().getValueCharacteristicReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
