/**
 * generated by Xtext 2.24.0
 */
package de.sebinside.dcp.dsl.dSL.impl;

import de.sebinside.dcp.dsl.dSL.DSLPackage;
import de.sebinside.dcp.dsl.dSL.TargetModelTypeDef;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.palladiosimulator.dataflow.dictionary.characterized.DataDictionaryCharacterized.DataDictionaryCharacterized;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Target Model Type Def</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.sebinside.dcp.dsl.dSL.impl.TargetModelTypeDefImpl#getType <em>Type</em>}</li>
 *   <li>{@link de.sebinside.dcp.dsl.dSL.impl.TargetModelTypeDefImpl#getTypeContainer <em>Type Container</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TargetModelTypeDefImpl extends MinimalEObjectImpl.Container implements TargetModelTypeDef
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getTypeContainer() <em>Type Container</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeContainer()
   * @generated
   * @ordered
   */
  protected DataDictionaryCharacterized typeContainer;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TargetModelTypeDefImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DSLPackage.Literals.TARGET_MODEL_TYPE_DEF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DSLPackage.TARGET_MODEL_TYPE_DEF__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataDictionaryCharacterized getTypeContainer()
  {
    if (typeContainer != null && ((EObject)typeContainer).eIsProxy())
    {
      InternalEObject oldTypeContainer = (InternalEObject)typeContainer;
      typeContainer = (DataDictionaryCharacterized)eResolveProxy(oldTypeContainer);
      if (typeContainer != oldTypeContainer)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DSLPackage.TARGET_MODEL_TYPE_DEF__TYPE_CONTAINER, oldTypeContainer, typeContainer));
      }
    }
    return typeContainer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataDictionaryCharacterized basicGetTypeContainer()
  {
    return typeContainer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTypeContainer(DataDictionaryCharacterized newTypeContainer)
  {
    DataDictionaryCharacterized oldTypeContainer = typeContainer;
    typeContainer = newTypeContainer;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DSLPackage.TARGET_MODEL_TYPE_DEF__TYPE_CONTAINER, oldTypeContainer, typeContainer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DSLPackage.TARGET_MODEL_TYPE_DEF__TYPE:
        return getType();
      case DSLPackage.TARGET_MODEL_TYPE_DEF__TYPE_CONTAINER:
        if (resolve) return getTypeContainer();
        return basicGetTypeContainer();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DSLPackage.TARGET_MODEL_TYPE_DEF__TYPE:
        setType((String)newValue);
        return;
      case DSLPackage.TARGET_MODEL_TYPE_DEF__TYPE_CONTAINER:
        setTypeContainer((DataDictionaryCharacterized)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DSLPackage.TARGET_MODEL_TYPE_DEF__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case DSLPackage.TARGET_MODEL_TYPE_DEF__TYPE_CONTAINER:
        setTypeContainer((DataDictionaryCharacterized)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DSLPackage.TARGET_MODEL_TYPE_DEF__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case DSLPackage.TARGET_MODEL_TYPE_DEF__TYPE_CONTAINER:
        return typeContainer != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(')');
    return result.toString();
  }

} //TargetModelTypeDefImpl
