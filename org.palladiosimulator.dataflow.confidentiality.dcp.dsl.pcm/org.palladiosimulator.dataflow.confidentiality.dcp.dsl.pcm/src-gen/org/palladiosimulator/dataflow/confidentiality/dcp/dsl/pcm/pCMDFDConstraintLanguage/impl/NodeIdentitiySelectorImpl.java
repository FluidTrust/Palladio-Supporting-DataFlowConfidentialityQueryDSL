/**
 * generated by Xtext 2.25.0
 */
package org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.pCMDFDConstraintLanguage.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.pCMDFDConstraintLanguage.NodeIdentitiySelector;
import org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.pCMDFDConstraintLanguage.PCMDFDConstraintLanguagePackage;

import org.palladiosimulator.dataflow.confidentiality.pcm.model.confidentiality.repository.OperationalDataStoreComponent;

import org.palladiosimulator.pcm.core.composition.AssemblyContext;

import org.palladiosimulator.pcm.repository.BasicComponent;
import org.palladiosimulator.pcm.repository.OperationSignature;

import org.palladiosimulator.pcm.seff.AbstractAction;

import org.palladiosimulator.pcm.usagemodel.EntryLevelSystemCall;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Node Identitiy Selector</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.pCMDFDConstraintLanguage.impl.NodeIdentitiySelectorImpl#getAssembly <em>Assembly</em>}</li>
 *   <li>{@link org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.pCMDFDConstraintLanguage.impl.NodeIdentitiySelectorImpl#getComponent <em>Component</em>}</li>
 *   <li>{@link org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.pCMDFDConstraintLanguage.impl.NodeIdentitiySelectorImpl#getAction <em>Action</em>}</li>
 *   <li>{@link org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.pCMDFDConstraintLanguage.impl.NodeIdentitiySelectorImpl#getSignature <em>Signature</em>}</li>
 *   <li>{@link org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.pCMDFDConstraintLanguage.impl.NodeIdentitiySelectorImpl#getUserAction <em>User Action</em>}</li>
 *   <li>{@link org.palladiosimulator.dataflow.confidentiality.dcp.dsl.pcm.pCMDFDConstraintLanguage.impl.NodeIdentitiySelectorImpl#getStore <em>Store</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NodeIdentitiySelectorImpl extends de.sebinside.dcp.dsl.dSL.impl.NodeIdentitiySelectorImpl implements NodeIdentitiySelector
{
  /**
   * The cached value of the '{@link #getAssembly() <em>Assembly</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAssembly()
   * @generated
   * @ordered
   */
  protected AssemblyContext assembly;

  /**
   * The cached value of the '{@link #getComponent() <em>Component</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponent()
   * @generated
   * @ordered
   */
  protected BasicComponent component;

  /**
   * The cached value of the '{@link #getAction() <em>Action</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAction()
   * @generated
   * @ordered
   */
  protected AbstractAction action;

  /**
   * The cached value of the '{@link #getSignature() <em>Signature</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSignature()
   * @generated
   * @ordered
   */
  protected OperationSignature signature;

  /**
   * The cached value of the '{@link #getUserAction() <em>User Action</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUserAction()
   * @generated
   * @ordered
   */
  protected EntryLevelSystemCall userAction;

  /**
   * The cached value of the '{@link #getStore() <em>Store</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStore()
   * @generated
   * @ordered
   */
  protected OperationalDataStoreComponent store;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NodeIdentitiySelectorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PCMDFDConstraintLanguagePackage.Literals.NODE_IDENTITIY_SELECTOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AssemblyContext getAssembly()
  {
    if (assembly != null && ((EObject)assembly).eIsProxy())
    {
      InternalEObject oldAssembly = (InternalEObject)assembly;
      assembly = (AssemblyContext)eResolveProxy(oldAssembly);
      if (assembly != oldAssembly)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__ASSEMBLY, oldAssembly, assembly));
      }
    }
    return assembly;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AssemblyContext basicGetAssembly()
  {
    return assembly;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAssembly(AssemblyContext newAssembly)
  {
    AssemblyContext oldAssembly = assembly;
    assembly = newAssembly;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__ASSEMBLY, oldAssembly, assembly));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BasicComponent getComponent()
  {
    if (component != null && ((EObject)component).eIsProxy())
    {
      InternalEObject oldComponent = (InternalEObject)component;
      component = (BasicComponent)eResolveProxy(oldComponent);
      if (component != oldComponent)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__COMPONENT, oldComponent, component));
      }
    }
    return component;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BasicComponent basicGetComponent()
  {
    return component;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setComponent(BasicComponent newComponent)
  {
    BasicComponent oldComponent = component;
    component = newComponent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__COMPONENT, oldComponent, component));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractAction getAction()
  {
    if (action != null && ((EObject)action).eIsProxy())
    {
      InternalEObject oldAction = (InternalEObject)action;
      action = (AbstractAction)eResolveProxy(oldAction);
      if (action != oldAction)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__ACTION, oldAction, action));
      }
    }
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AbstractAction basicGetAction()
  {
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAction(AbstractAction newAction)
  {
    AbstractAction oldAction = action;
    action = newAction;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__ACTION, oldAction, action));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OperationSignature getSignature()
  {
    if (signature != null && ((EObject)signature).eIsProxy())
    {
      InternalEObject oldSignature = (InternalEObject)signature;
      signature = (OperationSignature)eResolveProxy(oldSignature);
      if (signature != oldSignature)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__SIGNATURE, oldSignature, signature));
      }
    }
    return signature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OperationSignature basicGetSignature()
  {
    return signature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSignature(OperationSignature newSignature)
  {
    OperationSignature oldSignature = signature;
    signature = newSignature;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__SIGNATURE, oldSignature, signature));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EntryLevelSystemCall getUserAction()
  {
    if (userAction != null && ((EObject)userAction).eIsProxy())
    {
      InternalEObject oldUserAction = (InternalEObject)userAction;
      userAction = (EntryLevelSystemCall)eResolveProxy(oldUserAction);
      if (userAction != oldUserAction)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__USER_ACTION, oldUserAction, userAction));
      }
    }
    return userAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EntryLevelSystemCall basicGetUserAction()
  {
    return userAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUserAction(EntryLevelSystemCall newUserAction)
  {
    EntryLevelSystemCall oldUserAction = userAction;
    userAction = newUserAction;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__USER_ACTION, oldUserAction, userAction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OperationalDataStoreComponent getStore()
  {
    if (store != null && ((EObject)store).eIsProxy())
    {
      InternalEObject oldStore = (InternalEObject)store;
      store = (OperationalDataStoreComponent)eResolveProxy(oldStore);
      if (store != oldStore)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__STORE, oldStore, store));
      }
    }
    return store;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OperationalDataStoreComponent basicGetStore()
  {
    return store;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStore(OperationalDataStoreComponent newStore)
  {
    OperationalDataStoreComponent oldStore = store;
    store = newStore;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__STORE, oldStore, store));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__ASSEMBLY:
        if (resolve) return getAssembly();
        return basicGetAssembly();
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__COMPONENT:
        if (resolve) return getComponent();
        return basicGetComponent();
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__ACTION:
        if (resolve) return getAction();
        return basicGetAction();
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__SIGNATURE:
        if (resolve) return getSignature();
        return basicGetSignature();
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__USER_ACTION:
        if (resolve) return getUserAction();
        return basicGetUserAction();
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__STORE:
        if (resolve) return getStore();
        return basicGetStore();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__ASSEMBLY:
        setAssembly((AssemblyContext)newValue);
        return;
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__COMPONENT:
        setComponent((BasicComponent)newValue);
        return;
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__ACTION:
        setAction((AbstractAction)newValue);
        return;
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__SIGNATURE:
        setSignature((OperationSignature)newValue);
        return;
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__USER_ACTION:
        setUserAction((EntryLevelSystemCall)newValue);
        return;
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__STORE:
        setStore((OperationalDataStoreComponent)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__ASSEMBLY:
        setAssembly((AssemblyContext)null);
        return;
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__COMPONENT:
        setComponent((BasicComponent)null);
        return;
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__ACTION:
        setAction((AbstractAction)null);
        return;
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__SIGNATURE:
        setSignature((OperationSignature)null);
        return;
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__USER_ACTION:
        setUserAction((EntryLevelSystemCall)null);
        return;
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__STORE:
        setStore((OperationalDataStoreComponent)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__ASSEMBLY:
        return assembly != null;
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__COMPONENT:
        return component != null;
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__ACTION:
        return action != null;
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__SIGNATURE:
        return signature != null;
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__USER_ACTION:
        return userAction != null;
      case PCMDFDConstraintLanguagePackage.NODE_IDENTITIY_SELECTOR__STORE:
        return store != null;
    }
    return super.eIsSet(featureID);
  }

} //NodeIdentitiySelectorImpl
